[{"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\reportWebVitals.js":"1","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\App.js":"2","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\LoginFolder\\LoginPage.js":"3","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\store.js":"4","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\PageState\\PageTypes.js":"5","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\PageState\\PageActions.js":"6","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\PageState\\PageReducers.js":"7","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\index.js":"8","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\PageContainer.js":"9","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\RootReducer.js":"10","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\LoginFolder\\SignUpPage.js":"11","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\GuestFolder\\GuestHomePage.js":"12","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestTitleMovieActions.js":"13","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestTitleMovieReducers.js":"14","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\index.js":"15","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestTitleMovieTypes.js":"16","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\GuestFolder\\GuestWelcomeMovieImg.js":"17","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\GuestFolder\\GuestMostPopular.js":"18","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestPopularReducers.js":"19","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestPopularAction.js":"20","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestPopularTypes.js":"21","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\GuestFolder\\GuestAboutMoviePage.js":"22","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestTopRatedActions.js":"23","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestTopRatedReducers.js":"24","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\GuestFolder\\GuestTopRated.js":"25","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestTopRatedTypes.js":"26","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestNowPlayingTypes.js":"27","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestNowPlayingReducers.js":"28","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\GuestFolder\\GuestNowPlaying.js":"29","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestPopularTvActions.js":"30","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestPopularTvReducers.js":"31","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\GuestFolder\\GuestMostPopularTv.js":"32","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestAiringTodayTypes.js":"33","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestAiringTodayReducers.js":"34","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestAiringTodayActions.js":"35","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\GuestFolder\\GuestAiringToday.js":"36","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestSearchActions.js":"37","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestSearchReducers.js":"38","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestSearchTypes.js":"39","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\GuestFolder\\GuestSearchPage.js":"40","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestSearchTVActions.js":"41","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestSearchTVReducers.js":"42","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\GuestFolder\\GuestAccountPage.js":"43","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestPopularTvTypes.js":"44","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestSearchTVTypes.js":"45","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestNowPlayingActions.js":"46"},{"size":362,"mtime":499162500000,"results":"47","hashOfConfig":"48"},{"size":559,"mtime":1607469274444,"results":"49","hashOfConfig":"48"},{"size":2871,"mtime":1607544241824,"results":"50","hashOfConfig":"48"},{"size":819,"mtime":1607469252699,"results":"51","hashOfConfig":"48"},{"size":298,"mtime":1607391228798,"results":"52","hashOfConfig":"48"},{"size":721,"mtime":1607391325463,"results":"53","hashOfConfig":"48"},{"size":1245,"mtime":1607391373557,"results":"54","hashOfConfig":"48"},{"size":457,"mtime":1607211317638,"results":"55","hashOfConfig":"48"},{"size":2395,"mtime":1607566923291,"results":"56","hashOfConfig":"48"},{"size":1069,"mtime":1607211358013,"results":"57","hashOfConfig":"48"},{"size":2986,"mtime":1607544189989,"results":"58","hashOfConfig":"48"},{"size":2740,"mtime":1607562283696,"results":"59","hashOfConfig":"48"},{"size":3683,"mtime":1607441792255,"results":"60","hashOfConfig":"48"},{"size":1887,"mtime":1607442280217,"results":"61","hashOfConfig":"48"},{"size":602,"mtime":1607461143353,"results":"62","hashOfConfig":"48"},{"size":434,"mtime":1607441739882,"results":"63","hashOfConfig":"48"},{"size":6145,"mtime":1607741202280,"results":"64","hashOfConfig":"48"},{"size":6069,"mtime":1607826939373,"results":"65","hashOfConfig":"48"},{"size":2854,"mtime":1607014514541,"results":"66","hashOfConfig":"48"},{"size":5230,"mtime":1607193659462,"results":"67","hashOfConfig":"48"},{"size":605,"mtime":1607044495857,"results":"68","hashOfConfig":"48"},{"size":61182,"mtime":1607806140691,"results":"69","hashOfConfig":"48"},{"size":5194,"mtime":1607014604781,"results":"70","hashOfConfig":"48"},{"size":2823,"mtime":1607014757168,"results":"71","hashOfConfig":"48"},{"size":6248,"mtime":1607794153376,"results":"72","hashOfConfig":"48"},{"size":545,"mtime":1607014553253,"results":"73","hashOfConfig":"48"},{"size":585,"mtime":1607034533129,"results":"74","hashOfConfig":"48"},{"size":2835,"mtime":1607034788027,"results":"75","hashOfConfig":"48"},{"size":6246,"mtime":1607793136992,"results":"76","hashOfConfig":"48"},{"size":5404,"mtime":1607292330401,"results":"77","hashOfConfig":"48"},{"size":2990,"mtime":1607047404115,"results":"78","hashOfConfig":"48"},{"size":6313,"mtime":1607794153376,"results":"79","hashOfConfig":"48"},{"size":605,"mtime":1607133350817,"results":"80","hashOfConfig":"48"},{"size":2998,"mtime":1607050969562,"results":"81","hashOfConfig":"48"},{"size":5313,"mtime":1607052340386,"results":"82","hashOfConfig":"48"},{"size":6312,"mtime":1607794033879,"results":"83","hashOfConfig":"48"},{"size":5640,"mtime":1607291793844,"results":"84","hashOfConfig":"48"},{"size":3133,"mtime":1607217260641,"results":"85","hashOfConfig":"48"},{"size":745,"mtime":1607194168584,"results":"86","hashOfConfig":"48"},{"size":13850,"mtime":1607829185429,"results":"87","hashOfConfig":"48"},{"size":5737,"mtime":1607292770877,"results":"88","hashOfConfig":"48"},{"size":3269,"mtime":1607217175986,"results":"89","hashOfConfig":"48"},{"size":5870,"mtime":1607477461892,"results":"90","hashOfConfig":"48"},{"size":665,"mtime":1607044577393,"results":"91","hashOfConfig":"48"},{"size":805,"mtime":1607210939318,"results":"92","hashOfConfig":"48"},{"size":5198,"mtime":1607034671581,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"1hjzs8t",{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"129"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"103"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"103"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"107"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"116"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"129"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\reportWebVitals.js",[],["209","210"],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\App.js",["211","212","213"],"import LoginPage from './LoginFolder/LoginPage'\nimport { Provider } from 'react-redux'\nimport PageContainer from './PageContainer'\nimport store from './redux/store'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\n\nfunction App() {\n  return (\n    <Switch>\n    <Provider store={store}>\n        <div className=\"App\">\n          <Route path=\"/\" component={PageContainer} />\n          {/*<PageContainer/>*/}\n        </div>\n    </Provider>\n    </Switch>\n  );\n}\n\nexport default App;\n","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\LoginFolder\\LoginPage.js",["214","215","216"],"import React from 'react'\r\nimport './login.scss'\r\nimport { connect } from 'react-redux'\r\nimport { loginPage, signupPage, guestPage } from '../redux'\r\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\r\n\r\n\r\nfunction LoginPage(props) {\r\n\r\n    document.body.style.background = \"url('https://images.pexels.com/photos/33129/popcorn-movie-party-entertainment.jpg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260')\";\r\n    document.body.style.backgroundRepeat = \"no-repeat\"\r\n    document.body.style.backgroundSize = \"cover\"\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"purple-overlay\"></div>\r\n\r\n            <nav>\r\n                <div className=\"img-movie-container\">\r\n                    <Link to=\"/guestpage\">\r\n                        <img onClick={props.guestPage} src=\"https://www.nicepng.com/png/full/670-6708259_action-icon-png.png\" alt=\"\" />\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className=\"login-signup\">\r\n                    <span className=\"login-button-nav\" onClick={props.loginPage}>Login </span> \r\n                    \r\n                    <Link to=\"/\">\r\n                        <span className=\"signup-button-nav\" onClick={props.signupPage}> SignUp</span>\r\n                    </Link> \r\n                    \r\n                </div>\r\n\r\n                <div className=\"nav-overlay\"></div>\r\n            </nav>\r\n\r\n            <div className=\"below-nav-container\">\r\n\r\n                <div className=\"put-info-box-container\">\r\n                    \r\n                    <div className=\"box-title\">\r\n                        Login\r\n                    </div>\r\n\r\n                    <div className=\"put-in-info-box\">\r\n                        \r\n                        <form>\r\n                            <input placeholder=\"Email\" />\r\n                            <input placeholder=\"Password\" />\r\n                            <div className=\"login-button-container\">\r\n                                <button className=\"login-button\">Login</button>\r\n                            </div>      \r\n                        </form>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"bottom-half\">\r\n    \r\n                        <Link to=\"/guestpage\">\r\n                            <div className=\"resume-guest\" onClick={props.guestPage}>Resume as Guest</div>\r\n                        </Link>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      pagestate: state.page.pagestate,\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      loginPage : () => dispatch(loginPage()), \r\n      signupPage : () => dispatch(signupPage()), \r\n      guestPage: () => dispatch(guestPage()),\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)\r\n",["217","218"],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\store.js",["219","220","221","222","223"],"import { createStore, applyMiddleware } from 'redux'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport PageReducer from './PageState/PageReducers'\r\nimport rootReducer from './RootReducer'\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\n\r\n/*const persistConfig = {\r\n    key: 'root',\r\n    storage: storage,\r\n    //stateReconciler: autoMergeLevel2 // see \"Merge Process\" section for details.\r\n};*/\r\n\r\n//const pReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(logger, thunk)))\r\n\r\nexport default store\r\n",["224","225"],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\PageState\\PageTypes.js",[],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\PageState\\PageActions.js",[],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\PageState\\PageReducers.js",[],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\index.js",[],["226","227"],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\PageContainer.js",["228","229","230","231"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loginPage, signupPage, guestPage, guestSearchPage } from './redux'\r\nimport LoginPage from './LoginFolder/LoginPage'\r\nimport SignUpPage from './LoginFolder/SignUpPage'\r\nimport GuestHomePage from './GuestFolder/GuestHomePage'\r\nimport GuestAboutMoviePage from './GuestFolder/GuestAboutMoviePage'\r\nimport GuestSearchPage from './GuestFolder/GuestSearchPage'\r\nimport GuestAccountPage from './GuestFolder/GuestAccountPage'\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\n\r\n\r\nfunction PageContainer(props) {\r\n    return (\r\n      <div >\r\n      <BrowserRouter>\r\n        <Switch>\r\n          {\r\n            /*props.pagestate === 'guest-page' ? <Route path=\"/guestpage\" component={GuestHomePage} />\r\n            : \r\n            props.pagestate === 'login-page' ? <Route path=\"/login\" component={LoginPage}/>\r\n            : \r\n            props.pagestate === 'signup-page' ? <Route path=\"/signup\"><SignUpPage/></Route>\r\n            :  \r\n            props.pagestate === 'guest-about-movie-page' ? <GuestAboutMoviePage/>\r\n            : \r\n            props.pagestate === 'guest-search-page' ? <GuestSearchPage/>\r\n            : \r\n            props.pagestate === 'guest-account-page' ? <GuestAccountPage/>\r\n            :\r\n            <Route path=\"/signup\" exact component={SignUpPage}/>\r\n        */}\r\n\r\n          {/*<Route path=\"/login\" component={LoginPage} />\r\n\r\n          <Route path=\"/\" exact component={SignUpPage} />*/}\r\n\r\n          <Route path=\"/\" exact component={GuestHomePage} />\r\n\r\n          {/*<Route path=\"/guestaccountpage\" component={GuestAccountPage} />*/}\r\n\r\n          <Route path=\"/guestaboutmovie\" component={GuestAboutMoviePage} />\r\n\r\n          <Route path=\"/guestsearchpage\" component={GuestSearchPage} />\r\n\r\n        </Switch>\r\n      </BrowserRouter>\r\n      </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      pagestate: state.page.pagestate,\r\n      imgpic: state.guesttitlemovie.imgpic, \r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      loginPage : () => dispatch(loginPage()), \r\n      signupPage : () => dispatch(signupPage()), \r\n      guestPage: () => dispatch(guestPage()),\r\n      guestSearchPage: () => dispatch(guestSearchPage()), \r\n    }\r\n  }\r\n  \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PageContainer)\r\n","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\RootReducer.js",[],["232","233"],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\LoginFolder\\SignUpPage.js",["234","235","236","237"],"import React, { useEffect } from 'react'\r\nimport './login.scss'\r\nimport { connect } from 'react-redux'\r\nimport { loginPage, signupPage, guestPage } from '../redux'\r\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\r\n\r\n\r\nfunction SignUpPage(props) {\r\n\r\n    document.body.style.background = \"url('https://images.pexels.com/photos/33129/popcorn-movie-party-entertainment.jpg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260')\";\r\n    document.body.style.backgroundRepeat = \"no-repeat\"\r\n    document.body.style.backgroundSize = \"cover\"\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"purple-overlay\"></div>\r\n\r\n            <nav>\r\n                <div className=\"img-movie-container\">\r\n                    <Link to=\"/guestpage\">\r\n                        <img onClick={props.guestPage} src=\"https://www.nicepng.com/png/full/670-6708259_action-icon-png.png\" alt=\"\" />\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className=\"login-signup\">\r\n                    <Link to=\"/login\">\r\n                        <span className=\"login-button-nav\" onClick={props.loginPage}>Login </span>\r\n                    </Link> \r\n                         \r\n                    <span className=\"signup-button-nav\" onClick={props.signupPage}> SignUp</span>\r\n                    \r\n                </div>\r\n\r\n                <div className=\"nav-overlay\"></div>\r\n            </nav>\r\n\r\n            <div className=\"below-nav-container\">\r\n\r\n                <div className=\"put-info-box-container\">\r\n                    \r\n                    <div className=\"box-title\">\r\n                        Sign Up\r\n                    </div>\r\n\r\n                    <div className=\"put-in-info-box\">\r\n                        \r\n                        <form>\r\n                            <input placeholder=\"First Name\" />\r\n                            <input placeholder=\"Email\" />\r\n                            <input placeholder=\"Password\" />\r\n                            <div className=\"login-button-container\">\r\n                                <button className=\"login-button\">Sign Up</button>\r\n                            </div>\r\n                        </form>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"bottom-half\">\r\n    \r\n                        <Link to=\"/guestpage\">\r\n                            <div className=\"resume-guest\" onClick={props.guestPage}>Resume as Guest</div>\r\n                        </Link>\r\n                        \r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      pagestate: state.page.pagestate,\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      loginPage : () => dispatch(loginPage()), \r\n      signupPage : () => dispatch(signupPage()), \r\n      guestPage: () => dispatch(guestPage()), \r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpPage)\r\n","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\GuestFolder\\GuestHomePage.js",["238","239","240","241"],"import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchGuestTitleMovie, fetchMostPopularData, \r\n         fetchTopRatedData, fetchNowPlayingData, \r\n         fetchMostPopularTvData, fetchAiringTodayData } from '../redux'\r\nimport './guest.scss'\r\nimport GuestMostPopular from './GuestMostPopular'\r\nimport GuestWelcomeMovieImg from './GuestWelcomeMovieImg'\r\nimport { loginPage, signupPage, guestPage } from '../redux'\r\nimport GuestTopRated from './GuestTopRated'\r\nimport GuestNowPlaying from './GuestNowPlaying'\r\nimport GuestMostPopularTv from './GuestMostPopularTv'\r\nimport GuestAiringToday from './GuestAiringToday'\r\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction GuestHomePage({ fetchGuestTitleMovie, imgpic, pagestate, fetchMostPopularData, \r\n                          loginPage, signupPage, guestPage, fetchTopRatedData, \r\n                          fetchNowPlayingData, fetchMostPopularTvData, fetchAiringTodayData }) {\r\n\r\n    document.body.style.background = \"unset\"\r\n    document.body.style.backgroundColor = \"rgb(15, 15, 15)\"\r\n\r\n    useEffect(() => {\r\n        fetchGuestTitleMovie()\r\n        fetchMostPopularData()\r\n        fetchTopRatedData()\r\n        fetchNowPlayingData()\r\n        fetchMostPopularTvData()\r\n        fetchAiringTodayData()\r\n    }, [fetchGuestTitleMovie, fetchMostPopularData, \r\n        fetchTopRatedData, fetchNowPlayingData, fetchMostPopularTvData, \r\n        fetchAiringTodayData])\r\n\r\n\r\n    return (\r\n        <div className=\"movie-big-boi-container\">\r\n            \r\n            <GuestWelcomeMovieImg/>\r\n\r\n            <GuestMostPopular/>\r\n\r\n            <GuestTopRated/>\r\n\r\n            <GuestNowPlaying/>\r\n\r\n            <GuestMostPopularTv/>\r\n\r\n            <GuestAiringToday/>\r\n\r\n            <div style={{marginBottom: '20px'}}></div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        imgpic: state.guesttitlemovie.imgpic, \r\n        pagestate: state.page.pagestate,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchGuestTitleMovie: () => dispatch(fetchGuestTitleMovie()), \r\n        fetchMostPopularData: () => dispatch(fetchMostPopularData()), \r\n        fetchTopRatedData: () => dispatch(fetchTopRatedData()),\r\n        fetchNowPlayingData: () => dispatch(fetchNowPlayingData()),\r\n        fetchMostPopularTvData: () => dispatch(fetchMostPopularTvData()), \r\n        fetchAiringTodayData: () => dispatch(fetchAiringTodayData()),\r\n        loginPage: () => dispatch(loginPage()), \r\n        signupPage: () => dispatch(signupPage()), \r\n        guestPage: () => dispatch(guestPage()), \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GuestHomePage)\r\n",["242","243"],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestTitleMovieActions.js",[],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestTitleMovieReducers.js",[],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\index.js",["244","245"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestTitleMovieTypes.js",[],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\GuestFolder\\GuestWelcomeMovieImg.js",["246","247","248","249","250"],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\GuestFolder\\GuestMostPopular.js",["251","252","253"],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestPopularReducers.js",[],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestPopularAction.js",["254"],"import axios from 'axios'\r\nimport { MOST_POPULAR_FRONT_PIC, MOST_POPULAR_BACK_PIC, MOST_POPULAR_TITLE, \r\n         MOST_POPULAR_RATE, MOST_POPULAR_GENRE, MOST_POPULAR_FAILURE, \r\n         MOST_POPULAR_REQUEST, MOST_POPULAR_INDEX, MOST_POPULAR_OVERVIEW, \r\n         MOST_POPULAR_RESET_INDEX } from './GuestPopularTypes'\r\n\r\n\r\nexport const mostPopularfrontPic = data => {\r\n    return {\r\n        type: MOST_POPULAR_FRONT_PIC,   \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const mostPopularBackPic = data => {\r\n    return {\r\n        type: MOST_POPULAR_BACK_PIC, \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const mostPopularTitle = data => {\r\n    return {\r\n        type: MOST_POPULAR_TITLE, \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const mostPopularRate = data => {\r\n    return {\r\n        type: MOST_POPULAR_RATE, \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const mostPopularGenre = data => {\r\n    return {\r\n        type: MOST_POPULAR_GENRE, \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const mostPopularOverview = data => {\r\n    return {\r\n        type: MOST_POPULAR_OVERVIEW, \r\n        payload: data \r\n    }\r\n}\r\n\r\nexport const mostPopularIndex = data => {\r\n    return {\r\n        type: MOST_POPULAR_INDEX, \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const mostPopularResetIndex = () => {\r\n    return {\r\n        type: MOST_POPULAR_RESET_INDEX, \r\n    }\r\n}\r\n\r\nconst mostPopularFailure = () => {\r\n    return {\r\n        type: MOST_POPULAR_FAILURE, \r\n    }\r\n}\r\n\r\nconst mostPopularRequest = () => {\r\n    return {\r\n        type: MOST_POPULAR_REQUEST, \r\n    }\r\n}\r\n\r\n\r\n//api calls \r\n\r\nexport const fetchMostPopularData = () => {\r\n    return (dispatch) => {\r\n        dispatch(mostPopularRequest)\r\n        axios.get('https://api.themoviedb.org/3/movie/popular?api_key=0949161fd6bf6f1127a37c1d3530c80d&language=en-US&page=1')\r\n        .then(res => {\r\n            const info = res.data \r\n\r\n            var frontPic = []\r\n            var backPic = []\r\n            var title = []\r\n            var rate = []\r\n            var gen = [[], [], [], [], [], [], [], [], [], [], \r\n            [], [], [], [], [], [], [], [], [], []]\r\n            var overview = []\r\n\r\n            for (var i = 0; i <= info.results.length - 1; i++) {\r\n                frontPic.push(info.results[i].poster_path)\r\n                backPic.push(info.results[i].backdrop_path)\r\n                title.push(info.results[i].title)\r\n                rate.push(info.results[i].vote_average)\r\n                overview.push(info.results[i].overview)\r\n            }\r\n\r\n            dispatch(mostPopularfrontPic(frontPic))\r\n            dispatch(mostPopularBackPic(backPic))\r\n            dispatch(mostPopularTitle(title))\r\n            dispatch(mostPopularRate(rate))\r\n            dispatch(mostPopularOverview(overview))\r\n\r\n            for (var i = 0; i <= info.results.length - 1; i++) {\r\n                for (var j = 0; j <= info.results[i].genre_ids.length - 1; j++) {\r\n\r\n                    if (info.results[i].genre_ids[j] === 28) {\r\n                        gen[i].splice(gen[i].length, 0, 'Action')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 12) {\r\n                        gen[i].splice(gen[i].length, 0, 'Adventure')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 16) {\r\n                        gen[i].splice(gen[i].length, 0, 'Animation')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 35) {\r\n                        gen[i].splice(gen[i].length, 0, 'Comedy')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 80) {\r\n                        gen[i].splice(gen[i].length, 0, 'Crime')\r\n                    }\r\n                    \r\n                    if (info.results[i].genre_ids[j] === 99) {\r\n                        gen[i].splice(gen[i].length, 0, 'Documentary')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 18) {\r\n                        gen[i].splice(gen[i].length, 0, 'Drama')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 14) {\r\n                        gen[i].splice(gen[i].length, 0, 'Fantasy')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 27) {\r\n                        gen[i].splice(gen[i].length, 0, 'Horror')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 9648) {\r\n                        gen[i].splice(gen[i].length, 0, 'Mystery')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 10749) {\r\n                        gen[i].splice(gen[i].length, 0, 'Romance')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 53) {\r\n                        gen[0].splice(gen[i].length, 0, 'Thriller')\r\n                    }\r\n                }\r\n            }\r\n\r\n            var newGenArr = []\r\n            \r\n            for (let i = 0; i <= gen.length - 1; i++) {\r\n                newGenArr.push([...new Set(gen[i])])\r\n            }\r\n            dispatch(mostPopularGenre(newGenArr))\r\n        })\r\n\r\n        .catch(err => {\r\n            const errorMsg = err.message\r\n            dispatch(mostPopularFailure(errorMsg))\r\n        })\r\n    }\r\n}\r\n","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestPopularTypes.js",[],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\GuestFolder\\GuestAboutMoviePage.js",["255","256","257","258","259","260","261","262","263","264","265","266","267","268","269"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport gsap from 'gsap'\r\nimport { ScrollTrigger } from 'gsap/ScrollTrigger'\r\nimport { BrowserRouter, Route, Switch, Link, Redirect } from 'react-router-dom';\r\nimport { loginPage, signupPage, guestPage, fetchMovieChangeSearchData, fetchMovieChangeSearchTvData, guestSearchPage, nowPlayingOverview, guestAccountPage } from '../redux'\r\n\r\ngsap.registerPlugin(ScrollTrigger)\r\n\r\nfunction GuestAboutMoviePage({ mostpopindex, mostpopfrontpic, mostpopbackpic, \r\n                              mostpoptitle, mostpoprate, mostpopgenre, mostpopoverview, \r\n\r\n                              pagestate, loginPage, signupPage, guestPage, guestAccountPage, \r\n\r\n                              topratedindex, topratedfrontpic, topratedbackpic, \r\n                              topratedtitle, topratedrate, topratedgenre, topratedoverview, \r\n\r\n                              nowplayindex, nowplayfrontpic, nowplaybackpic, \r\n                              nowplaytitle, nowplayrate, nowplaygenre, nowplayoverview, \r\n\r\n                              mostpoptvindex, mostpoptvfrontpic, mostpoptvbackpic, \r\n                              mostpoptvtitle, mostpoptvrate, mostpoptvgenre, mostpoptvoverview, \r\n\r\n                              airingtodayindex, airingtodayfrontpic, airingtodaybackpic, \r\n                              airingtodaytitle, airingtodayrate, airingtodaygenre, airingtodayoverview,\r\n\r\n                              guestsearchindex, guestsearchfrontpic, guestsearchbackpic, \r\n                              guestsearchtitle, guestsearchrate, guestsearchgenre, guestsearchoverview,\r\n\r\n                              guestsearchtvindex, guestsearchtvfrontpic, guestsearchtvbackpic, \r\n                              guestsearchtvtitle, guestsearchtvrate, guestsearchtvgenre, guestsearchtvoverview,\r\n\r\n                              fetchMovieChangeSearchData, fetchMovieChangeSearchTvData, guestSearchPage\r\n                               }) {\r\n\r\n    const popIndex = mostpopindex.split(' ')\r\n    const topRatedIndex = topratedindex.split(' ')\r\n    const nowPlayingIndex = nowplayindex.split(' ')\r\n    const popTvIndex = mostpoptvindex.split(' ')\r\n    const airingTodayIndex = airingtodayindex.split(' ')\r\n    const guestSearchIndex = guestsearchindex.split(' ')\r\n    const guestSearchTvIndex = guestsearchtvindex.split(' ')\r\n\r\n    const API_KEY = '0949161fd6bf6f1127a37c1d3530c80d'\r\n    const IMG_URL = 'http://image.tmdb.org/t/p/'\r\n    const IMG_SIZE = 'w200'\r\n\r\n    //useState \r\n    const [rateColor, setRateColor] = useState('')\r\n    const [rateZindex, setRateZindex] = useState(-10)\r\n    const [imgOpacity, setImgOpacity] = useState(0)\r\n    const [darkenPageZindex, setDarkenPageZindex] = useState(-9)\r\n    const [aboutMovieZindex, setAboutMovieZindex] = useState(-10)\r\n    \r\n    const [search, setSearch] = useState('')\r\n    const [redirectState, setRedirectState] = useState(false)\r\n    //useState \r\n\r\n    //useRef \r\n        //popular movie\r\n    const popNavImgAnim = useRef()\r\n    const popNavSearchAnim = useRef()\r\n    const popNavSearchImgAnim = useRef()\r\n\r\n    const popTitleAnim = useRef()\r\n    const popMovieImgAnim = useRef()\r\n    const popScoreItAnim = useRef()\r\n    const popScoreAnim = useRef()\r\n    const popGenreAnim = useRef()\r\n    const popSynopisAnim = useRef()\r\n    const popBackgroundAnim = useRef()\r\n        //popular movie\r\n\r\n        //top rated \r\n    const ratedNavImgAnim = useRef()\r\n    const ratedNavSearchAnim = useRef()\r\n    const ratedNavSearchImgAnim = useRef()\r\n\r\n    const ratedTitleAnim = useRef()\r\n    const ratedMovieImgAnim = useRef()\r\n    const ratedScoreItAnim = useRef()\r\n    const ratedScoreAnim = useRef()\r\n    const ratedGenreAnim = useRef()\r\n    const ratedSynopisAnim = useRef()\r\n    const ratedBackgroundAnim = useRef()\r\n        //top rated \r\n    \r\n        //now playing \r\n    const playingNavImgAnim = useRef()\r\n    const playingNavSearchAnim = useRef()\r\n    const playingNavSearchImgAnim = useRef()\r\n    \r\n    const playingTitleAnim = useRef()\r\n    const playingMovieImgAnim = useRef()\r\n    const playingScoreItAnim = useRef()\r\n    const playingScoreAnim = useRef()\r\n    const playingGenreAnim = useRef()\r\n    const playingSynopisAnim = useRef()\r\n    const playingBackgroundAnim = useRef()\r\n        //now playing \r\n\r\n        //popular tv\r\n    const popTvNavImgAnim = useRef()\r\n    const popTvNavSearchAnim = useRef()\r\n    const popTvNavSearchImgAnim = useRef()\r\n        \r\n    const popTvTitleAnim = useRef()\r\n    const popTvMovieImgAnim = useRef()\r\n    const popTvScoreItAnim = useRef()\r\n    const popTvScoreAnim = useRef()\r\n    const popTvGenreAnim = useRef()\r\n    const popTvSynopisAnim = useRef()\r\n    const popTvBackgroundAnim = useRef()\r\n        //popular tv\r\n\r\n        //airing today \r\n    const airingNavImgAnim = useRef()\r\n    const airingNavSearchAnim = useRef()\r\n    const airingNavSearchImgAnim = useRef()\r\n            \r\n    const airingTitleAnim = useRef()\r\n    const airingMovieImgAnim = useRef()\r\n    const airingScoreItAnim = useRef()\r\n    const airingScoreAnim = useRef()\r\n    const airingGenreAnim = useRef()\r\n    const airingSynopisAnim = useRef()\r\n    const airingBackgroundAnim = useRef()\r\n        //airing today\r\n\r\n        //search movie \r\n    const searchNavImgAnim = useRef()\r\n    const searchNavSearchAnim = useRef()\r\n    const searchNavSearchImgAnim = useRef()\r\n                \r\n    const searchTitleAnim = useRef()\r\n    const searchMovieImgAnim = useRef()\r\n    const searchScoreItAnim = useRef()\r\n    const searchScoreAnim = useRef()\r\n    const searchGenreAnim = useRef()\r\n    const searchSynopisAnim = useRef()\r\n    const searchBackgroundAnim = useRef()\r\n        //search movie \r\n\r\n        //search tv \r\n    const searchTvNavImgAnim = useRef()\r\n    const searchTvNavSearchAnim = useRef()\r\n    const searchTvNavSearchImgAnim = useRef()\r\n                    \r\n    const searchTvTitleAnim = useRef()\r\n    const searchTvMovieImgAnim = useRef()\r\n    const searchTvScoreItAnim = useRef()\r\n    const searchTvScoreAnim = useRef()\r\n    const searchTvGenreAnim = useRef()\r\n    const searchTvSynopisAnim = useRef()\r\n    const searchTvBackgroundAnim = useRef()\r\n        //search tv\r\n    //useRef \r\n\r\n    //functions \r\n    const handleRateClick = () => {\r\n        setRateZindex(10)\r\n        setImgOpacity(1)\r\n        setDarkenPageZindex(9)\r\n    }\r\n\r\n    const handleRateUnClick = () => {\r\n        setRateZindex(-10)\r\n        setImgOpacity(0)\r\n        setDarkenPageZindex(-9)\r\n    }\r\n\r\n    const handleAboutMovieClick = () => {\r\n        setAboutMovieZindex(10)\r\n        setDarkenPageZindex(9)\r\n        setImgOpacity(1)\r\n    }\r\n\r\n    const handleAboutMovieUnClick = () => {\r\n        setAboutMovieZindex(-10)\r\n        setDarkenPageZindex(-9)\r\n        setImgOpacity(0)\r\n    }\r\n    //functions \r\n    \r\n    //useEffect \r\n    useEffect(() => {\r\n\r\n        if (popIndex[0] !== '') {\r\n            if (mostpoprate[popIndex[0]] >= 7) {\r\n                setRateColor('lime')\r\n            }\r\n            else if (mostpoprate[popIndex[0]] >= 5) {\r\n                setRateColor('orange')\r\n            }\r\n            else {\r\n                setRateColor('red')\r\n            }\r\n        }\r\n\r\n        else if (topRatedIndex[0] !== '') {\r\n            if (topratedrate[topRatedIndex[0]] >= 7) {\r\n                setRateColor('lime')\r\n            }\r\n            else if (topratedrate[topRatedIndex[0]] >= 5) {\r\n                setRateColor('orange')\r\n            }\r\n            else {\r\n                setRateColor('red')\r\n            }\r\n        }\r\n\r\n        else if (nowPlayingIndex[0] !== '') {\r\n            if (nowplayrate[nowPlayingIndex[0]] >= 7) {\r\n                setRateColor('lime')\r\n            }\r\n            else if (nowplayrate[nowPlayingIndex[0]] >= 5) {\r\n                setRateColor('orange')\r\n            }\r\n            else {\r\n                setRateColor('red')\r\n            }\r\n        }\r\n\r\n        else if (popTvIndex[0] !== '') {\r\n            if (mostpoptvrate[popTvIndex[0]] >= 7) {\r\n                setRateColor('lime')\r\n            }\r\n            else if (mostpoptvrate[popTvIndex[0]] >= 5) {\r\n                setRateColor('orange')\r\n            }\r\n            else {\r\n                setRateColor('red')\r\n            }\r\n        }\r\n\r\n        else if (airingTodayIndex[0] !== '') {\r\n            if (airingtodayrate[airingTodayIndex[0]] >= 7) {\r\n                setRateColor('lime')\r\n            }\r\n            else if (airingtodayrate[airingTodayIndex[0]] >= 5) {\r\n                setRateColor('orange')\r\n            }\r\n            else {\r\n                setRateColor('red')\r\n            }\r\n        }\r\n\r\n        else if (guestSearchIndex[0] !== '') {\r\n            if (guestsearchrate[guestSearchIndex[0]] >= 7) {\r\n                setRateColor('lime')\r\n            }\r\n            else if (guestsearchrate[guestSearchIndex[0]] >= 5) {\r\n                setRateColor('orange')\r\n            }\r\n            else {\r\n                setRateColor('red')\r\n            }\r\n        }\r\n\r\n        else {\r\n            if (guestSearchTvIndex[0] !== '') {\r\n                if (guestsearchtvrate[guestSearchTvIndex[0]] >= 7) {\r\n                    setRateColor('lime')\r\n                }\r\n                else if (guestsearchtvrate[guestSearchTvIndex[0]] >= 5) {\r\n                    setRateColor('orange')\r\n                }\r\n                else {\r\n                    setRateColor('red')\r\n                }\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n\r\n        if (popIndex[0] !== '') {\r\n            gsap.fromTo(popNavImgAnim.current, { x: -50, opacity: 0 }, { x: 0, opacity: 1, duration: 0.5, delay: 0.25 })\r\n\r\n            gsap.fromTo([popNavSearchAnim.current, popNavSearchImgAnim.current], { y: -200 }, { y: 0, duration: 0.75, delay: 0.75 })\r\n\r\n            gsap.fromTo([popTitleAnim.current, popMovieImgAnim.current], { x: -50, opacity: 0 }, { x: 0, opacity: 1, duration: 1, delay: 1.5 })\r\n\r\n            gsap.fromTo([popScoreItAnim.current, popScoreAnim.current, popGenreAnim.current], { opacity: 0, y:50 }, { opacity: 1, y: 0, duration: 1, delay: 2.25 })\r\n\r\n            gsap.fromTo(popSynopisAnim.current, { opacity: 0, y: 50 }, { opacity: 1, y: 0, duration: 1, delay: 2.5 })\r\n\r\n            gsap.fromTo(popBackgroundAnim.current, { opacity: 0 }, { opacity: 1, duration: 1, delay: 3 })\r\n        }\r\n\r\n        else if (topRatedIndex[0] !== '') {\r\n            gsap.fromTo(ratedNavImgAnim.current, { x: -50, opacity: 0 }, { x: 0, opacity: 1, duration: 0.5, delay: 0.25 })\r\n\r\n            gsap.fromTo([ratedNavSearchAnim.current, ratedNavSearchImgAnim.current], { y: -200 }, { y: 0, duration: 0.75, delay: 0.75 })\r\n\r\n            gsap.fromTo([ratedTitleAnim.current, ratedMovieImgAnim.current], { x: -50, opacity: 0 }, { x: 0, opacity: 1, duration: 1, delay: 1.5 })\r\n\r\n            gsap.fromTo([ratedScoreItAnim.current, ratedScoreAnim.current, ratedGenreAnim.current], { opacity: 0, y:50 }, { opacity: 1, y: 0, duration: 1, delay: 2.25 })\r\n\r\n            gsap.fromTo(ratedSynopisAnim.current, { opacity: 0, y: 50 }, { opacity: 1, y: 0, duration: 1, delay: 2.5 })\r\n\r\n            gsap.fromTo(ratedBackgroundAnim.current, { opacity: 0 }, { opacity: 1, duration: 1, delay: 3 })\r\n        }\r\n\r\n        else if (nowPlayingIndex[0] !== '') {\r\n            gsap.fromTo(playingNavImgAnim.current, { x: -50, opacity: 0 }, { x: 0, opacity: 1, duration: 0.5, delay: 0.25 })\r\n\r\n            gsap.fromTo([playingNavSearchAnim.current, playingNavSearchImgAnim.current], { y: -200 }, { y: 0, duration: 0.75, delay: 0.75 })\r\n\r\n            gsap.fromTo([playingTitleAnim.current, playingMovieImgAnim.current], { x: -50, opacity: 0 }, { x: 0, opacity: 1, duration: 1, delay: 1.5 })\r\n\r\n            gsap.fromTo([playingScoreItAnim.current, playingScoreAnim.current, playingGenreAnim.current], { opacity: 0, y:50 }, { opacity: 1, y: 0, duration: 1, delay: 2.25 })\r\n\r\n            gsap.fromTo(playingSynopisAnim.current, { opacity: 0, y: 50 }, { opacity: 1, y: 0, duration: 1, delay: 2.5 })\r\n\r\n            gsap.fromTo(playingBackgroundAnim.current, { opacity: 0 }, { opacity: 1, duration: 1, delay: 3 })\r\n        }\r\n\r\n        else if (popTvIndex[0] !== '') {\r\n            gsap.fromTo(popTvNavImgAnim.current, { x: -50, opacity: 0 }, { x: 0, opacity: 1, duration: 0.5, delay: 0.25 })\r\n\r\n            gsap.fromTo([popTvNavSearchAnim.current, popTvNavSearchImgAnim.current], { y: -200 }, { y: 0, duration: 0.75, delay: 0.75 })\r\n\r\n            gsap.fromTo([popTvTitleAnim.current, popTvMovieImgAnim.current], { x: -50, opacity: 0 }, { x: 0, opacity: 1, duration: 1, delay: 1.5 })\r\n\r\n            gsap.fromTo([popTvScoreItAnim.current, popTvScoreAnim.current, popTvGenreAnim.current], { opacity: 0, y:50 }, { opacity: 1, y: 0, duration: 1, delay: 2.25 })\r\n\r\n            gsap.fromTo(popTvSynopisAnim.current, { opacity: 0, y: 50 }, { opacity: 1, y: 0, duration: 1, delay: 2.5 })\r\n\r\n            gsap.fromTo(popTvBackgroundAnim.current, { opacity: 0 }, { opacity: 1, duration: 1, delay: 3 })\r\n        }\r\n\r\n        else if (airingTodayIndex[0] !== '') {\r\n            gsap.fromTo(airingNavImgAnim.current, { x: -50, opacity: 0 }, { x: 0, opacity: 1, duration: 0.5, delay: 0.25 })\r\n\r\n            gsap.fromTo([airingNavSearchAnim.current, airingNavSearchImgAnim.current], { y: -200 }, { y: 0, duration: 0.75, delay: 0.75 })\r\n\r\n            gsap.fromTo([airingTitleAnim.current, airingMovieImgAnim.current], { x: -50, opacity: 0 }, { x: 0, opacity: 1, duration: 1, delay: 1.5 })\r\n\r\n            gsap.fromTo([airingScoreItAnim.current, airingScoreAnim.current, airingGenreAnim.current], { opacity: 0, y:50 }, { opacity: 1, y: 0, duration: 1, delay: 2.25 })\r\n\r\n            gsap.fromTo(airingSynopisAnim.current, { opacity: 0, y: 50 }, { opacity: 1, y: 0, duration: 1, delay: 2.5 })\r\n\r\n            gsap.fromTo(airingBackgroundAnim.current, { opacity: 0 }, { opacity: 1, duration: 1, delay: 3 })\r\n        }\r\n\r\n        else if (guestSearchIndex[0] !== '') {\r\n            gsap.fromTo(searchNavImgAnim.current, { x: -50, opacity: 0 }, { x: 0, opacity: 1, duration: 0.5, delay: 0.25 })\r\n\r\n            gsap.fromTo([searchNavSearchAnim.current, searchNavSearchImgAnim.current], { y: -200 }, { y: 0, duration: 0.75, delay: 0.75 })\r\n\r\n            gsap.fromTo([searchTitleAnim.current, searchMovieImgAnim.current], { x: -50, opacity: 0 }, { x: 0, opacity: 1, duration: 1, delay: 1.5 })\r\n\r\n            gsap.fromTo([searchScoreItAnim.current, searchScoreAnim.current, searchGenreAnim.current], { opacity: 0, y:50 }, { opacity: 1, y: 0, duration: 1, delay: 2.25 })\r\n\r\n            gsap.fromTo(searchSynopisAnim.current, { opacity: 0, y: 50 }, { opacity: 1, y: 0, duration: 1, delay: 2.5 })\r\n\r\n            gsap.fromTo(searchBackgroundAnim.current, { opacity: 0 }, { opacity: 1, duration: 1, delay: 3 })\r\n        }\r\n\r\n        else if (guestSearchTvIndex[0] !== '') {\r\n            gsap.fromTo(searchTvNavImgAnim.current, { x: -50, opacity: 0 }, { x: 0, opacity: 1, duration: 0.5, delay: 0.25 })\r\n\r\n            gsap.fromTo([searchTvNavSearchAnim.current, searchTvNavSearchImgAnim.current], { y: -200 }, { y: 0, duration: 0.75, delay: 0.75 })\r\n\r\n            gsap.fromTo([searchTvTitleAnim.current, searchTvMovieImgAnim.current], { x: -50, opacity: 0 }, { x: 0, opacity: 1, duration: 1, delay: 1.5 })\r\n\r\n            gsap.fromTo([searchTvScoreItAnim.current, searchTvScoreAnim.current, searchTvGenreAnim.current], { opacity: 0, y:50 }, { opacity: 1, y: 0, duration: 1, delay: 2.25 })\r\n\r\n            gsap.fromTo(searchTvSynopisAnim.current, { opacity: 0, y: 50 }, { opacity: 1, y: 0, duration: 1, delay: 2.5 })\r\n\r\n            gsap.fromTo(searchTvBackgroundAnim.current, { opacity: 0 }, { opacity: 1, duration: 1, delay: 3 })\r\n        }\r\n    }, [])\r\n    //useEffect \r\n\r\n    //functions \r\n    const handleSubmitSearch = e => {\r\n        e.preventDefault()\r\n        if (!search || !search.trim()) {\r\n            return \r\n        }\r\n        else {\r\n            fetchMovieChangeSearchData(search)\r\n            fetchMovieChangeSearchTvData(search)\r\n            guestSearchPage()\r\n            setRedirectState(true)\r\n        }\r\n    }\r\n\r\n    const handleOnChangeSearch = e => {\r\n        e.preventDefault()\r\n\r\n        setSearch(e.target.value)\r\n    }\r\n    //functions \r\n\r\n    //conditionals \r\n    if (redirectState) {\r\n        return <Redirect to=\"/guestsearchpage\" />\r\n    }\r\n\r\n    if (guestSearchIndex[0] === '' && airingTodayIndex[0] === '' && \r\n        popIndex[0] === '' && topRatedIndex[0] === '' && nowPlayingIndex[0] === '' && \r\n        popTvIndex[0] === '' && guestSearchTvIndex[0] === '') {\r\n        return <Redirect to=\"/\" />\r\n    }  \r\n    //conditionals \r\n\r\n\r\n    return (\r\n        <div className=\"about-movie-page\">\r\n\r\n            {\r\n                popIndex[0] !== '' && \r\n                topRatedIndex[0] === '' &&\r\n                nowPlayingIndex[0] === ''  && \r\n                popTvIndex[0] === '' && \r\n                airingTodayIndex[0] === '' && \r\n                guestSearchIndex[0] === '' && \r\n                guestSearchTvIndex[0] === '' ? \r\n\r\n                    <div className=\"about-movie-top-container\" >\r\n\r\n                        <nav>\r\n                            <div className=\"img-movie-container\" ref={popNavImgAnim} >\r\n                                <Link to=\"/\">\r\n                                    <img onClick={guestPage} src=\"https://www.nicepng.com/png/full/670-6708259_action-icon-png.png\" alt=\"\" />\r\n                                </Link>\r\n                            </div>\r\n\r\n                            <div className=\"login-signup\">\r\n                                <form className=\"search-button\" onSubmit={handleSubmitSearch} onChange={handleOnChangeSearch}>\r\n                                    <input type=\"text\" placeholder=\"Search\" ref={popNavSearchAnim} />\r\n                                    <button className=\"search-icon-container\" ref={popNavSearchImgAnim}>\r\n                                        <img className=\"dis-img\" alt=\"\" src=\"https://rubiojason.github.io/Around-The-World/static/media/SearchIcon.e1a3c478.svg\" />\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n\r\n                            <div className=\"nav-overlay\"></div>\r\n                        </nav>\r\n\r\n\r\n                        <div className=\"about-movie-overlay\" style={{background: `url(${IMG_URL}original${mostpopbackpic[popIndex[0]]})`, \r\n                            backgroundRepeat: 'no-repeat', backgroundSize: 'cover', backgroundPosition: 'center'}} ref={popBackgroundAnim}></div>\r\n\r\n                        <div className=\"about-movie-title-container\" ref={popTitleAnim}>\r\n                            {mostpoptitle[popIndex[0]]}\r\n                        </div>\r\n\r\n                        <div className=\"about-movie-img-container\">\r\n\r\n                            <div className=\"about-movie-img-inside\" >\r\n                                <img alt=\"\" src={IMG_URL + IMG_SIZE + mostpopfrontpic[popIndex[0]]} ref={popMovieImgAnim} />\r\n                            </div>\r\n\r\n                            <div className=\"right-content\">\r\n\r\n                                <div className=\"top-content-in-right\">\r\n\r\n                                    <div className=\"score-it-container\" ref={popScoreItAnim}>\r\n                                        <div className=\"side-title\">Score it</div>\r\n                                        {/*<input placeholder=\"1/10\"  list=\"data\"/>*/}\r\n                                            <select id=\"data\" >\r\n                                                <option>1</option>\r\n                                                <option>2</option>\r\n                                                <option>3</option>\r\n                                                <option>4</option>\r\n                                                <option>5</option>\r\n                                                <option>6</option>\r\n                                                <option>7</option>\r\n                                                <option>8</option>\r\n                                                <option>9</option>\r\n                                                <option>10</option>\r\n                                            </select>\r\n                                            \r\n                                    </div>\r\n\r\n                                    <div className=\"score-container\" ref={popScoreAnim}>\r\n                                        <div className=\"side-title\">Score</div>\r\n                                        <div className=\"actual-score\" \r\n                                        style={{ color: rateColor }}>\r\n                                            {mostpoprate[popIndex[0]]} / 10\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"genre-container\" ref={popGenreAnim}>\r\n                                        <div className=\"side-title\">Genre</div>\r\n                                        <div className=\"genre-box-container\">\r\n                                            {\r\n                                                mostpopgenre[popIndex[0]].map( p => \r\n                                                <div className=\"genre-box-about\" key={p}>{p}</div>)\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div className=\"bottom-content-in-right\">\r\n                                    <div className=\"overview-text\"></div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"overview-container-two\">\r\n                            <div className=\"overview-text-two\" ref={popSynopisAnim}>\r\n                                {mostpopoverview[popIndex[0]]}\r\n                                {/*<p className=\"read-more\" onClick={handleAboutMovieClick}>Read More</p>*/}\r\n                            </div>   \r\n                        </div>\r\n        \r\n                    </div>\r\n\r\n                : \r\n\r\n                topRatedIndex[0] !== '' &&\r\n                popIndex[0] === '' && \r\n                nowPlayingIndex[0] === '' &&\r\n                popTvIndex[0] === '' && \r\n                airingTodayIndex[0] === '' && \r\n                guestSearchIndex[0] === '' && \r\n                guestSearchTvIndex[0] === '' ? \r\n\r\n\r\n                    <div className=\"about-movie-top-container\" >\r\n\r\n                        <nav>\r\n                            <div className=\"img-movie-container\" ref={ratedNavImgAnim}>\r\n                                <Link to=\"/\">\r\n                                    <img onClick={guestPage} src=\"https://www.nicepng.com/png/full/670-6708259_action-icon-png.png\" alt=\"\" />\r\n                                </Link>\r\n                                \r\n                            </div>\r\n\r\n                            <div className=\"login-signup\">\r\n                                <form className=\"search-button\" onSubmit={handleSubmitSearch} onChange={handleOnChangeSearch}>\r\n                                    <input type=\"text\" placeholder=\"Search\" ref={ratedNavSearchAnim} />\r\n                                    <button className=\"search-icon-container\" type=\"submit\" ref={ratedNavSearchImgAnim} >\r\n                                        <img className=\"dis-img\" alt=\"\" src=\"https://rubiojason.github.io/Around-The-World/static/media/SearchIcon.e1a3c478.svg\" />\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n\r\n                            <div className=\"nav-overlay\"></div>\r\n                        </nav>\r\n\r\n\r\n                        <div className=\"about-movie-overlay\" style={{background: `url(${IMG_URL}original${topratedbackpic[topRatedIndex[0]]})`, \r\n                            backgroundRepeat: 'no-repeat', backgroundSize: 'cover', backgroundPosition: 'center'}} ref={ratedBackgroundAnim}></div>\r\n\r\n                        <div className=\"about-movie-title-container\" ref={ratedTitleAnim}>\r\n                            {topratedtitle[topRatedIndex[0]]}\r\n                        </div>\r\n\r\n                        <div className=\"about-movie-img-container\">\r\n\r\n                            <div className=\"about-movie-img-inside\" >\r\n                                <img alt=\"\" src={IMG_URL + IMG_SIZE + topratedfrontpic[topRatedIndex[0]]} ref={ratedMovieImgAnim} />\r\n                            </div>\r\n\r\n                            <div className=\"right-content\">\r\n\r\n                                <div className=\"top-content-in-right\">\r\n\r\n                                    <div className=\"score-it-container\" ref={ratedScoreItAnim} >\r\n                                        <div className=\"side-title\">Score it</div>\r\n                                        {/*<input placeholder=\"1/10\" type=\"\" list=\"data\" onClick={handleRateClick} />*/}\r\n                                            <select id=\"data\" >\r\n                                                <option>1</option>\r\n                                                <option>2</option>\r\n                                                <option>3</option>\r\n                                                <option>4</option>\r\n                                                <option>5</option>\r\n                                                <option>6</option>\r\n                                                <option>7</option>\r\n                                                <option>8</option>\r\n                                                <option>9</option>\r\n                                                <option>10</option>\r\n                                            </select>\r\n                                                \r\n                                    </div>\r\n\r\n                                    <div className=\"score-container\" ref={ratedScoreAnim} >\r\n                                        <div className=\"side-title\">Score</div>\r\n                                        <div className=\"actual-score\" \r\n                                        style={{ color: rateColor }}>\r\n                                            {topratedrate[topRatedIndex[0]]} / 10\r\n                                        </div>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"genre-container\" ref={ratedGenreAnim} >\r\n                                        <div className=\"side-title\">Genre</div>\r\n                                        <div className=\"genre-box-container\">\r\n                                            {\r\n                                                topratedgenre[topRatedIndex[0]].map( p => \r\n                                                <div className=\"genre-box-about\" key={p}>{p}</div>)\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                    \r\n                                <div className=\"bottom-content-in-right\">\r\n                                    <div className=\"overview-text\"></div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"overview-container-two\">\r\n                            <div className=\"overview-text-two\" ref={ratedSynopisAnim} >\r\n                                {topratedoverview[topRatedIndex[0]]}\r\n                                {/*<p className=\"read-more\" onClick={handleAboutMovieClick}>Read More</p>*/}\r\n                            </div>   \r\n                        </div>\r\n            \r\n                    </div>\r\n\r\n                : \r\n\r\n                nowPlayingIndex[0] !== '' &&\r\n                popIndex[0] === '' && \r\n                topRatedIndex[0] === '' && \r\n                popTvIndex[0] === '' && \r\n                airingTodayIndex[0] === '' &&\r\n                guestSearchIndex[0] === '' && \r\n                guestSearchTvIndex[0] === '' ? \r\n\r\n                <div className=\"about-movie-top-container\" >\r\n\r\n                    <nav>\r\n                        <div className=\"img-movie-container\" ref={playingNavImgAnim} >\r\n                            <Link to=\"/\">\r\n                                <img onClick={guestPage} src=\"https://www.nicepng.com/png/full/670-6708259_action-icon-png.png\" alt=\"\" />\r\n                            </Link>\r\n                            \r\n                        </div>\r\n\r\n                        <div className=\"login-signup\">\r\n                            <form className=\"search-button\" onSubmit={handleSubmitSearch} onChange={handleOnChangeSearch} >\r\n                                <input type=\"text\" placeholder=\"Search\" ref={playingNavSearchAnim} />\r\n                                <button className=\"search-icon-container\" type=\"submit\" ref={playingNavSearchImgAnim} >\r\n                                   <img className=\"dis-img\" alt=\"\" src=\"https://rubiojason.github.io/Around-The-World/static/media/SearchIcon.e1a3c478.svg\" /> \r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n\r\n                        <div className=\"nav-overlay\"></div>\r\n                    </nav>\r\n\r\n\r\n                    <div className=\"about-movie-overlay\" style={{background: `url(${IMG_URL}original${nowplaybackpic[nowPlayingIndex[0]]})`, \r\n                        backgroundRepeat: 'no-repeat', backgroundSize: 'cover', backgroundPosition: 'center'}} ref={playingBackgroundAnim} ></div>\r\n\r\n                    <div className=\"about-movie-title-container\" ref={playingTitleAnim} >\r\n                        {nowplaytitle[nowPlayingIndex[0]]}\r\n                    </div>\r\n\r\n                    <div className=\"about-movie-img-container\">\r\n\r\n                        <div className=\"about-movie-img-inside\" >\r\n                            <img alt=\"\" src={IMG_URL + IMG_SIZE + nowplayfrontpic[nowPlayingIndex[0]]} ref={playingMovieImgAnim} />\r\n                        </div>\r\n\r\n                        <div className=\"right-content\">\r\n\r\n                            <div className=\"top-content-in-right\">\r\n\r\n                                <div className=\"score-it-container\" ref={playingScoreItAnim} >\r\n                                    <div className=\"side-title\">Score it</div>\r\n                                        {/*<input placeholder=\"1/10\" type=\"\" list=\"data\" onClick={handleRateClick} />*/}\r\n                                            <select id=\"data\" >\r\n                                                <option>1</option>\r\n                                                <option>2</option>\r\n                                                <option>3</option>\r\n                                                <option>4</option>\r\n                                                <option>5</option>\r\n                                                <option>6</option>\r\n                                                <option>7</option>\r\n                                                <option>8</option>\r\n                                                <option>9</option>\r\n                                                <option>10</option>\r\n                                            </select>\r\n                                                                \r\n                                </div>\r\n\r\n                                <div className=\"score-container\" ref={playingScoreAnim} >\r\n                                    <div className=\"side-title\">Score</div>\r\n                                    <div className=\"actual-score\" \r\n                                        style={{ color: rateColor }}>\r\n                                            {nowplayrate[nowPlayingIndex[0]]} / 10\r\n                                    </div>\r\n                                </div>\r\n                                                \r\n                                <div className=\"genre-container\" ref={playingGenreAnim} >\r\n                                    <div className=\"side-title\">Genre</div>\r\n                                    <div className=\"genre-box-container\">\r\n                                        {\r\n                                            nowplaygenre[nowPlayingIndex[0]].map( p => \r\n                                            <div className=\"genre-box-about\" key={p}>{p}</div>)\r\n                                        }\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                                                    \r\n                            <div className=\"bottom-content-in-right\">\r\n                                <div className=\"overview-text\"></div>\r\n                            </div>\r\n                                                \r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"overview-container-two\">\r\n                        <div className=\"overview-text-two\" ref={playingSynopisAnim} >\r\n                            {nowplayoverview[nowPlayingIndex[0]]}\r\n                            {/*<p className=\"read-more\" onClick={handleAboutMovieClick}>Read More</p>*/}\r\n                        </div>   \r\n                    </div>\r\n\r\n                </div>\r\n\r\n                : \r\n\r\n                popTvIndex[0] !== '' &&\r\n                popIndex[0] === '' && \r\n                topRatedIndex[0] === '' && \r\n                nowPlayingIndex[0] === '' && \r\n                airingTodayIndex[0] === '' && \r\n                guestSearchIndex[0] === '' &&\r\n                guestSearchTvIndex[0] === '' ? \r\n\r\n                <div className=\"about-movie-top-container\" >\r\n\r\n                    <nav>\r\n                        <div className=\"img-movie-container\" ref={popTvNavImgAnim} >\r\n                            <Link to=\"/\">\r\n                                <img onClick={guestPage} src=\"https://www.nicepng.com/png/full/670-6708259_action-icon-png.png\" alt=\"\" />\r\n                            </Link>\r\n                            \r\n                        </div>\r\n\r\n                        <div className=\"login-signup\">\r\n                            <form className=\"search-button\" onSubmit={handleSubmitSearch} onChange={handleOnChangeSearch}>\r\n                                <input type=\"text\" placeholder=\"Search\" ref={popTvNavSearchAnim} />\r\n                                <button className=\"search-icon-container\" type=\"submit\" ref={popTvNavSearchImgAnim} >\r\n                                    <img className=\"dis-img\" alt=\"\" src=\"https://rubiojason.github.io/Around-The-World/static/media/SearchIcon.e1a3c478.svg\" />\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n\r\n                        <div className=\"nav-overlay\"></div>\r\n                    </nav>\r\n\r\n\r\n                    <div className=\"about-movie-overlay\" style={{background: `url(${IMG_URL}original${mostpoptvbackpic[popTvIndex[0]]})`, \r\n                        backgroundRepeat: 'no-repeat', backgroundSize: 'cover', backgroundPosition: 'center'}} ref={popTvBackgroundAnim} ></div>\r\n\r\n                    <div className=\"about-movie-title-container\" ref={popTvTitleAnim} >\r\n                        {mostpoptvtitle[popTvIndex[0]]}\r\n                    </div>\r\n\r\n                    <div className=\"about-movie-img-container\">\r\n\r\n                        <div className=\"about-movie-img-inside\" >\r\n                            <img alt=\"\" src={IMG_URL + IMG_SIZE + mostpoptvfrontpic[popTvIndex[0]]} ref={popTvMovieImgAnim} />\r\n                        </div>\r\n\r\n                        <div className=\"right-content\">\r\n\r\n                            <div className=\"top-content-in-right\">\r\n\r\n                                <div className=\"score-it-container\" ref={popTvScoreItAnim} >\r\n                                    <div className=\"side-title\">Score it</div>\r\n                                        {/*<input placeholder=\"1/10\" type=\"\" list=\"data\" onClick={handleRateClick} />*/}\r\n                                            <select id=\"data\" >\r\n                                                <option>1</option>\r\n                                                <option>2</option>\r\n                                                <option>3</option>\r\n                                                <option>4</option>\r\n                                                <option>5</option>\r\n                                                <option>6</option>\r\n                                                <option>7</option>\r\n                                                <option>8</option>\r\n                                                <option>9</option>\r\n                                                <option>10</option>\r\n                                            </select>                        \r\n                                </div>\r\n\r\n                                <div className=\"score-container\" ref={popTvScoreAnim} >\r\n                                    <div className=\"side-title\">Score</div>\r\n                                    <div className=\"actual-score\" \r\n                                        style={{ color: rateColor }}>\r\n                                            {mostpoptvrate[popTvIndex[0]]} / 10\r\n                                    </div>\r\n                                </div>\r\n                                                \r\n                                <div className=\"genre-container\" ref={popTvGenreAnim} >\r\n                                    <div className=\"side-title\">Genre</div>\r\n                                    <div className=\"genre-box-container\">\r\n                                        {\r\n                                            nowplaygenre[popTvIndex[0]].map( p => \r\n                                            <div className=\"genre-box-about\" key={p}>{p}</div>)\r\n                                        }\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                                                    \r\n                            <div className=\"bottom-content-in-right\">\r\n                                <div className=\"overview-text\"></div>\r\n                            </div>\r\n                                                \r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"overview-container-two\">\r\n                        <div className=\"overview-text-two\" ref={popTvSynopisAnim} >\r\n                            {mostpoptvoverview[popTvIndex[0]]}\r\n                            {/*<p className=\"read-more\" onClick={handleAboutMovieClick}>Read More</p>*/}\r\n                        </div>   \r\n                    </div>\r\n\r\n                </div>\r\n\r\n                : \r\n\r\n                airingTodayIndex[0] !== '' &&\r\n                popIndex[0] === '' && \r\n                topRatedIndex[0] === '' && \r\n                nowPlayingIndex[0] === '' && \r\n                popTvIndex[0] === '' && \r\n                guestSearchIndex[0] === '' && \r\n                guestSearchTvIndex[0] === '' ? \r\n\r\n                <div className=\"about-movie-top-container\" >\r\n\r\n                    <nav>\r\n                        <div className=\"img-movie-container\" ref={airingNavImgAnim} >\r\n                            <Link to=\"/\">\r\n                               <img onClick={guestPage} src=\"https://www.nicepng.com/png/full/670-6708259_action-icon-png.png\" alt=\"\" /> \r\n                            </Link>\r\n                        </div>\r\n\r\n                        <div className=\"login-signup\">\r\n                            <form className=\"search-button\" onSubmit={handleSubmitSearch} onChange={handleOnChangeSearch} >\r\n                                <input type=\"text\" placeholder=\"Search\" ref={airingNavSearchAnim} />\r\n                                <button className=\"search-icon-container\" type=\"submit\" ref={airingNavSearchImgAnim} >\r\n                                    <img className=\"dis-img\" alt=\"\" src=\"https://rubiojason.github.io/Around-The-World/static/media/SearchIcon.e1a3c478.svg\" />\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n\r\n                        <div className=\"nav-overlay\"></div>\r\n                    </nav>\r\n\r\n\r\n                    <div className=\"about-movie-overlay\" style={{background: `url(${IMG_URL}original${airingtodaybackpic[airingTodayIndex[0]]})`, \r\n                        backgroundRepeat: 'no-repeat', backgroundSize: 'cover', backgroundPosition: 'center'}} ref={airingBackgroundAnim} ></div>\r\n\r\n                    <div className=\"about-movie-title-container\" ref={airingTitleAnim} >\r\n                        {airingtodaytitle[airingTodayIndex[0]]}\r\n                    </div>\r\n\r\n                    <div className=\"about-movie-img-container\">\r\n\r\n                        <div className=\"about-movie-img-inside\" >\r\n                            <img alt=\"\" src={IMG_URL + IMG_SIZE + airingtodayfrontpic[airingTodayIndex[0]]} ref={airingMovieImgAnim} />\r\n                        </div>\r\n\r\n                        <div className=\"right-content\">\r\n\r\n                            <div className=\"top-content-in-right\">\r\n\r\n                                <div className=\"score-it-container\" ref={airingScoreItAnim} >\r\n                                    <div className=\"side-title\">Score it</div>\r\n                                        {/*<input placeholder=\"1/10\" type=\"\" list=\"data\" onClick={handleRateClick} />*/}\r\n                                            <select id=\"data\" >\r\n                                                <option>1</option>\r\n                                                <option>2</option>\r\n                                                <option>3</option>\r\n                                                <option>4</option>\r\n                                                <option>5</option>\r\n                                                <option>6</option>\r\n                                                <option>7</option>\r\n                                                <option>8</option>\r\n                                                <option>9</option>\r\n                                                <option>10</option>\r\n                                            </select>\r\n                                                                \r\n                                </div>\r\n\r\n                                <div className=\"score-container\" ref={airingScoreAnim} >\r\n                                    <div className=\"side-title\">Score</div>\r\n                                    <div className=\"actual-score\" \r\n                                        style={{ color: rateColor }}>\r\n                                            {airingtodayrate[airingTodayIndex[0]]} / 10\r\n                                    </div>\r\n                                </div>\r\n                                                \r\n                                <div className=\"genre-container\" ref={airingGenreAnim} >\r\n                                    <div className=\"side-title\">Genre</div>\r\n                                    <div className=\"genre-box-container\">\r\n                                        {\r\n                                            airingtodaygenre[airingTodayIndex[0]].map( p => \r\n                                            <div className=\"genre-box-about\" key={p}>{p}</div>)\r\n                                        }\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                                                    \r\n                            <div className=\"bottom-content-in-right\">\r\n                                <div className=\"overview-text\"></div>\r\n                            </div>\r\n                                                \r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"overview-container-two\">\r\n                        <div className=\"overview-text-two\" ref={airingSynopisAnim} >\r\n                            {airingtodayoverview[airingTodayIndex[0]]}\r\n                            {/*<p className=\"read-more\" onClick={handleAboutMovieClick}>Read More</p>*/}\r\n                        </div>   \r\n                    </div>\r\n\r\n                </div>\r\n\r\n                : \r\n\r\n                guestSearchIndex[0] !== '' && \r\n                airingTodayIndex[0] === '' && \r\n                popIndex[0] === '' && \r\n                topRatedIndex[0] === '' && \r\n                nowPlayingIndex[0] === '' && \r\n                popTvIndex[0] === '' && \r\n                guestSearchTvIndex[0] === '' ? \r\n\r\n                <div className=\"about-movie-top-container\" >\r\n\r\n                    <nav>\r\n                        <div className=\"img-movie-container\" ref={searchNavImgAnim} >\r\n                            <Link to=\"/\">\r\n                                <img onClick={guestPage} src=\"https://www.nicepng.com/png/full/670-6708259_action-icon-png.png\" alt=\"\" /> \r\n                            </Link>\r\n                        </div>\r\n\r\n                        <div className=\"login-signup\">\r\n                            <form className=\"search-button\" onSubmit={handleSubmitSearch} onChange={handleOnChangeSearch} >\r\n                                <input type=\"text\" placeholder=\"Search\" ref={searchNavSearchAnim} />\r\n                                <button className=\"search-icon-container\" type=\"submit\" ref={searchNavSearchImgAnim} >\r\n                                    <img className=\"dis-img\" alt=\"\" src=\"https://rubiojason.github.io/Around-The-World/static/media/SearchIcon.e1a3c478.svg\" />\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n\r\n                        <div className=\"nav-overlay\"></div>\r\n                    </nav>\r\n\r\n\r\n                    <div className=\"about-movie-overlay\" style={{background: `url(${IMG_URL}original${guestsearchbackpic[guestSearchIndex[0]]})`, \r\n                        backgroundRepeat: 'no-repeat', backgroundSize: 'cover', backgroundPosition: 'center'}} ref={searchBackgroundAnim} ></div>\r\n\r\n                    <div className=\"about-movie-title-container\" ref={searchTitleAnim} >\r\n                        {guestsearchtitle[guestSearchIndex[0]]}\r\n                    </div>\r\n\r\n                    <div className=\"about-movie-img-container\">\r\n\r\n                        <div className=\"about-movie-img-inside\" >\r\n                            <img alt=\"\" src={IMG_URL + IMG_SIZE + guestsearchfrontpic[guestSearchIndex[0]]} ref={searchMovieImgAnim} />\r\n                        </div>\r\n\r\n                        <div className=\"right-content\">\r\n\r\n                            <div className=\"top-content-in-right\">\r\n\r\n                                <div className=\"score-it-container\" ref={searchScoreItAnim} >\r\n                                    <div className=\"side-title\">Score it</div>\r\n                                        {/*<input placeholder=\"1/10\" type=\"\" list=\"data\" onClick={handleRateClick} />*/}\r\n                                            <select id=\"data\" >\r\n                                                <option>1</option>\r\n                                                <option>2</option>\r\n                                                <option>3</option>\r\n                                                <option>4</option>\r\n                                                <option>5</option>\r\n                                                <option>6</option>\r\n                                                <option>7</option>\r\n                                                <option>8</option>\r\n                                                <option>9</option>\r\n                                                <option>10</option>\r\n                                            </select>\r\n                                                                \r\n                                </div>\r\n\r\n                                <div className=\"score-container\" ref={searchScoreAnim} >\r\n                                    <div className=\"side-title\">Score</div>\r\n                                    <div className=\"actual-score\" \r\n                                        style={{ color: rateColor }}>\r\n                                            {guestsearchrate[guestSearchIndex[0]]} / 10\r\n                                    </div>\r\n                                </div>\r\n                                                \r\n                                <div className=\"genre-container\" ref={searchGenreAnim} >\r\n                                    <div className=\"side-title\">Genre</div>\r\n                                    <div className=\"genre-box-container\">\r\n                                        {\r\n                                            guestsearchgenre[guestSearchIndex[0]].map( p => \r\n                                            <div className=\"genre-box-about\" key={p}>{p}</div>)\r\n                                        }\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                                                    \r\n                            <div className=\"bottom-content-in-right\">\r\n                                <div className=\"overview-text\"></div>\r\n                            </div>\r\n                                                \r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"overview-container-two\">\r\n                        <div className=\"overview-text-two\" ref={searchSynopisAnim} >\r\n                            {guestsearchoverview[guestSearchIndex[0]]}\r\n                            {/*<p className=\"read-more\" onClick={handleAboutMovieClick}>Read More</p>*/}\r\n                        </div>   \r\n                    </div>\r\n\r\n                </div>\r\n\r\n                : \r\n\r\n                guestSearchTvIndex[0] !== '' &&\r\n                guestSearchIndex[0] === '' && \r\n                airingTodayIndex[0] === '' && \r\n                popIndex[0] === '' && \r\n                topRatedIndex[0] === '' && \r\n                nowPlayingIndex[0] === '' && \r\n                popTvIndex[0] === '' ? \r\n                \r\n                    <div className=\"about-movie-top-container\" >\r\n\r\n                        <nav>\r\n                            <div className=\"img-movie-container\" ref={searchTvNavImgAnim} >\r\n                                <Link to=\"/\">\r\n                                    <img onClick={guestPage} src=\"https://www.nicepng.com/png/full/670-6708259_action-icon-png.png\" alt=\"\" />\r\n                                </Link>\r\n                            </div>\r\n\r\n                            <div className=\"login-signup\">\r\n                                <form className=\"search-button\" onSubmit={handleSubmitSearch} onChange={handleOnChangeSearch} >\r\n                                    <input type=\"text\" placeholder=\"Search\" ref={searchTvNavSearchAnim} />\r\n                                    <button className=\"search-icon-container\" type=\"submit\" ref={searchTvNavSearchImgAnim} >\r\n                                        <img className=\"dis-img\" alt=\"\" src=\"https://rubiojason.github.io/Around-The-World/static/media/SearchIcon.e1a3c478.svg\" />\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n\r\n                            <div className=\"nav-overlay\"></div>\r\n                        </nav>\r\n\r\n\r\n                        <div className=\"about-movie-overlay\" style={{background: `url(${IMG_URL}original${guestsearchtvbackpic[guestSearchTvIndex[0]]})`, \r\n                            backgroundRepeat: 'no-repeat', backgroundSize: 'cover', backgroundPosition: 'center'}} ref={searchTvBackgroundAnim} ></div>\r\n\r\n                        <div className=\"about-movie-title-container\" ref={searchTvTitleAnim} >\r\n                            {guestsearchtvtitle[guestSearchTvIndex[0]]}\r\n                        </div>\r\n\r\n                        <div className=\"about-movie-img-container\">\r\n\r\n                            <div className=\"about-movie-img-inside\" >\r\n                                <img alt=\"\" src={IMG_URL + IMG_SIZE + guestsearchtvfrontpic[guestSearchTvIndex[0]]} ref={searchTvMovieImgAnim} />\r\n                            </div>\r\n\r\n                            <div className=\"right-content\">\r\n\r\n                                <div className=\"top-content-in-right\">\r\n\r\n                                    <div className=\"score-it-container\" ref={searchTvScoreItAnim} >\r\n                                        <div className=\"side-title\">Score it</div>\r\n                                            {/*<input placeholder=\"1/10\" type=\"\" list=\"data\" onClick={handleRateClick} />*/}\r\n                                                <select id=\"data\" >\r\n                                                    <option>1</option>\r\n                                                    <option>2</option>\r\n                                                    <option>3</option>\r\n                                                    <option>4</option>\r\n                                                    <option>5</option>\r\n                                                    <option>6</option>\r\n                                                    <option>7</option>\r\n                                                    <option>8</option>\r\n                                                    <option>9</option>\r\n                                                    <option>10</option>\r\n                                                </select>\r\n                                                                    \r\n                                    </div>\r\n\r\n                                    <div className=\"score-container\" ref={searchTvScoreAnim} >\r\n                                        <div className=\"side-title\">Score</div>\r\n                                        <div className=\"actual-score\" \r\n                                            style={{ color: rateColor }}>\r\n                                                {guestsearchtvrate[guestSearchTvIndex[0]]} / 10\r\n                                        </div>\r\n                                    </div>\r\n                                                    \r\n                                    <div className=\"genre-container\" ref={searchTvGenreAnim} >\r\n                                        <div className=\"side-title\">Genre</div>\r\n                                        <div className=\"genre-box-container\">\r\n                                            {\r\n                                                guestsearchtvgenre[guestSearchTvIndex[0]].map( p => \r\n                                                <div className=\"genre-box-about\" key={p}>{p}</div>)\r\n                                            }\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                                        \r\n                                <div className=\"bottom-content-in-right\">\r\n                                    <div className=\"overview-text\"></div>\r\n                                </div>\r\n                                                    \r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"overview-container-two\">\r\n                            <div className=\"overview-text-two\" ref={searchTvSynopisAnim} >\r\n                                {guestsearchtvoverview[guestSearchTvIndex[0]]}\r\n                                {/*<p className=\"read-more\" onClick={handleAboutMovieClick}>Read More</p>*/}\r\n                            </div>   \r\n                        </div>\r\n\r\n                        </div>\r\n\r\n                :\r\n\r\n                <div>your done</div>\r\n                                                        \r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        imgpic: state.guesttitlemovie.imgpic, \r\n        pagestate: state.page.pagestate,\r\n\r\n        mostpopfailure: state.mostpop.mostpopfailure,\r\n        mostpoploading: state.mostpop.mostpoploading,  \r\n\r\n        mostpopfrontpic: state.mostpop.mostpopfrontpic,\r\n        mostpopbackpic: state.mostpop.mostpopbackpic, \r\n        mostpoptitle: state.mostpop.mostpoptitle, \r\n        mostpoprate: state.mostpop.mostpoprate,\r\n        mostpopgenre: state.mostpop.mostpopgenre,\r\n        mostpopoverview: state.mostpop.mostpopoverview, \r\n        mostpopindex: state.mostpop.mostpopindex, \r\n\r\n        topratedfailure: state.toprated.topratedfailure,\r\n        topratedloading: state.toprated.topratedloading,  \r\n\r\n        topratedfrontpic: state.toprated.topratedfrontpic,\r\n        topratedbackpic: state.toprated.topratedbackpic, \r\n        topratedtitle: state.toprated.topratedtitle, \r\n        topratedrate: state.toprated.topratedrate,\r\n        topratedgenre: state.toprated.topratedgenre,\r\n        topratedoverview: state.toprated.topratedoverview, \r\n        topratedindex: state.toprated.topratedindex, \r\n\r\n        nowplayfailure: state.nowplay.nowplayfailure,\r\n        nowplayloading: state.nowplay.nowplayloading,  \r\n\r\n        nowplayfrontpic: state.nowplay.nowplayfrontpic,\r\n        nowplaybackpic: state.nowplay.nowplaybackpic, \r\n        nowplaytitle: state.nowplay.nowplaytitle, \r\n        nowplayrate: state.nowplay.nowplayrate,\r\n        nowplaygenre: state.nowplay.nowplaygenre,\r\n        nowplayoverview: state.nowplay.nowplayoverview, \r\n        nowplayindex: state.nowplay.nowplayindex, \r\n\r\n        mostpoptvfailure: state.mostpoptv.mostpoptvfailure,\r\n        mostpoptvloading: state.mostpoptv.mostpoptvloading,  \r\n\r\n        mostpoptvfrontpic: state.mostpoptv.mostpoptvfrontpic,\r\n        mostpoptvbackpic: state.mostpoptv.mostpoptvbackpic, \r\n        mostpoptvtitle: state.mostpoptv.mostpoptvtitle, \r\n        mostpoptvrate: state.mostpoptv.mostpoptvrate,\r\n        mostpoptvgenre: state.mostpoptv.mostpoptvgenre,\r\n        mostpoptvoverview: state.mostpoptv.mostpoptvoverview, \r\n        mostpoptvindex: state.mostpoptv.mostpoptvindex, \r\n\r\n        airingtodayfailure: state.airingtoday.airingtodayfailure,\r\n        airingtodayloading: state.airingtoday.airingtodayloading,  \r\n\r\n        airingtodayfrontpic: state.airingtoday.airingtodayfrontpic,\r\n        airingtodaybackpic: state.airingtoday.airingtodaybackpic, \r\n        airingtodaytitle: state.airingtoday.airingtodaytitle, \r\n        airingtodayrate: state.airingtoday.airingtodayrate,\r\n        airingtodaygenre: state.airingtoday.airingtodaygenre,\r\n        airingtodayoverview: state.airingtoday.airingtodayoverview, \r\n        airingtodayindex: state.airingtoday.airingtodayindex, \r\n\r\n        guestsearchfailure: state.guestsearch.guestsearchfailure,\r\n        guestsearchloading: state.guestsearch.guestsearchloading,  \r\n\r\n        guestsearchfrontpic: state.guestsearch.guestsearchfrontpic,\r\n        guestsearchbackpic: state.guestsearch.guestsearchbackpic, \r\n        guestsearchtitle: state.guestsearch.guestsearchtitle, \r\n        guestsearchrate: state.guestsearch.guestsearchrate,\r\n        guestsearchgenre: state.guestsearch.guestsearchgenre,\r\n        guestsearchoverview: state.guestsearch.guestsearchoverview, \r\n        guestsearchindex: state.guestsearch.guestsearchindex, \r\n\r\n        guestsearchtvfailure: state.guestsearchtv.guestsearchtvfailure,\r\n        guestsearchtvloading: state.guestsearchtv.guestsearchtvloading,  \r\n\r\n        guestsearchtvfrontpic: state.guestsearchtv.guestsearchtvfrontpic,\r\n        guestsearchtvbackpic: state.guestsearchtv.guestsearchtvbackpic, \r\n        guestsearchtvtitle: state.guestsearchtv.guestsearchtvtitle, \r\n        guestsearchtvrate: state.guestsearchtv.guestsearchtvrate,\r\n        guestsearchtvgenre: state.guestsearchtv.guestsearchtvgenre,\r\n        guestsearchtvoverview: state.guestsearchtv.guestsearchtvoverview, \r\n        guestsearchtvindex: state.guestsearchtv.guestsearchtvindex, \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    loginPage: () => dispatch(loginPage()), \r\n    signupPage: () => dispatch(signupPage()), \r\n    guestPage: () => dispatch(guestPage()), \r\n    guestSearchPage: () => dispatch(guestSearchPage()),\r\n    guestAccountPage: () => dispatch(guestAccountPage()),  \r\n    fetchMovieChangeSearchData: (i) => dispatch(fetchMovieChangeSearchData(i)), \r\n    fetchMovieChangeSearchTvData: (i) => dispatch(fetchMovieChangeSearchTvData(i)), \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GuestAboutMoviePage)\r\n","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestTopRatedActions.js",["270"],"import axios from 'axios'\r\nimport { TOP_RATED_FRONT_PIC, TOP_RATED_BACK_PIC, TOP_RATED_TITLE, \r\n         TOP_RATED_RATE, TOP_RATED_GENRE, TOP_RATED_FAILURE, \r\n         TOP_RATED_REQUEST, TOP_RATED_INDEX, TOP_RATED_OVERVIEW, \r\n         TOP_RATED_RESET_INDEX } from './GuestTopRatedTypes'\r\n\r\n\r\nexport const topRatedfrontPic = data => {\r\n    return {\r\n        type: TOP_RATED_FRONT_PIC,   \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const topRatedBackPic = data => {\r\n    return {\r\n        type: TOP_RATED_BACK_PIC, \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const topRatedTitle = data => {\r\n    return {\r\n        type: TOP_RATED_TITLE, \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const topRatedRate = data => {\r\n    return {\r\n        type: TOP_RATED_RATE, \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const topRatedGenre = data => {\r\n    return {\r\n        type: TOP_RATED_GENRE, \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const topRatedOverview = data => {\r\n    return {\r\n        type: TOP_RATED_OVERVIEW, \r\n        payload: data \r\n    }\r\n}\r\n\r\nexport const topRatedIndex = data => {\r\n    return {\r\n        type: TOP_RATED_INDEX, \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const topRatedResetIndex = () => {\r\n    return {\r\n        type: TOP_RATED_RESET_INDEX, \r\n    }\r\n}\r\n\r\nconst topRatedFailure = () => {\r\n    return {\r\n        type: TOP_RATED_FAILURE, \r\n    }\r\n}\r\n\r\nconst topRatedRequest = () => {\r\n    return {\r\n        type: TOP_RATED_REQUEST, \r\n    }\r\n}\r\n\r\n\r\n//api calls \r\n\r\nexport const fetchTopRatedData = () => {\r\n    return (dispatch) => {\r\n        dispatch(topRatedRequest)\r\n        axios.get('https://api.themoviedb.org/3/movie/top_rated?api_key=0949161fd6bf6f1127a37c1d3530c80d&language=en-US&page=1')\r\n        .then(res => {\r\n            const info = res.data \r\n\r\n            console.log('helllolololololo')\r\n            console.log(info)\r\n\r\n            var frontPic = []\r\n            var backPic = []\r\n            var title = []\r\n            var rate = []\r\n            var gen = [[], [], [], [], [], [], [], [], [], [], \r\n            [], [], [], [], [], [], [], [], [], []]\r\n            var overview = []\r\n\r\n            for (var i = 0; i <= info.results.length - 1; i++) {\r\n                frontPic.push(info.results[i].poster_path)\r\n                backPic.push(info.results[i].backdrop_path)\r\n                title.push(info.results[i].title)\r\n                rate.push(info.results[i].vote_average)\r\n                overview.push(info.results[i].overview)\r\n            }\r\n\r\n            dispatch(topRatedfrontPic(frontPic))\r\n            dispatch(topRatedBackPic(backPic))\r\n            dispatch(topRatedTitle(title))\r\n            dispatch(topRatedRate(rate))\r\n            dispatch(topRatedOverview(overview))\r\n\r\n            for (var i = 0; i <= info.results.length - 1; i++) {\r\n                for (var j = 0; j <= info.results[i].genre_ids.length - 1; j++) {\r\n\r\n                    if (info.results[i].genre_ids[j] === 28) {\r\n                        gen[i].splice(gen[i].length, 0, 'Action')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 12) {\r\n                        gen[i].splice(gen[i].length, 0, 'Adventure')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 16) {\r\n                        gen[i].splice(gen[i].length, 0, 'Animation')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 35) {\r\n                        gen[i].splice(gen[i].length, 0, 'Comedy')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 80) {\r\n                        gen[i].splice(gen[i].length, 0, 'Crime')\r\n                    }\r\n                    \r\n                    if (info.results[i].genre_ids[j] === 99) {\r\n                        gen[i].splice(gen[i].length, 0, 'Documentary')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 18) {\r\n                        gen[i].splice(gen[i].length, 0, 'Drama')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 14) {\r\n                        gen[i].splice(gen[i].length, 0, 'Fantasy')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 27) {\r\n                        gen[i].splice(gen[i].length, 0, 'Horror')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 9648) {\r\n                        gen[i].splice(gen[i].length, 0, 'Mystery')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 10749) {\r\n                        gen[i].splice(gen[i].length, 0, 'Romance')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 53) {\r\n                        gen[0].splice(gen[i].length, 0, 'Thriller')\r\n                    }\r\n                }\r\n            }\r\n\r\n            var newGenArr = []\r\n            \r\n            for (let i = 0; i <= gen.length - 1; i++) {\r\n                newGenArr.push([...new Set(gen[i])])\r\n            }\r\n            dispatch(topRatedGenre(newGenArr))\r\n        })\r\n\r\n        .catch(err => {\r\n            const errorMsg = err.message\r\n            dispatch(topRatedFailure(errorMsg))\r\n        })\r\n    }\r\n}\r\n",["271","272"],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestTopRatedReducers.js",[],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\GuestFolder\\GuestTopRated.js",["273","274","275"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport gsap from 'gsap'\r\nimport { ScrollTrigger } from 'gsap/ScrollTrigger'\r\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\r\nimport { topRatedIndex, guestAboutMoviePage, mostPopularResetIndex, \r\n         topRatedResetIndex, nowPlayingResetIndex, mostPopularTvResetIndex, \r\n        airingTodayResetIndex, changeMovieSearchResetIndex,changeMovieSearchTvResetIndex} from '../redux'\r\n\r\ngsap.registerPlugin(ScrollTrigger)\r\n\r\n\r\nfunction GuestTopRated({ topratedfrontpic, topratedbackpic, topratedtitle, \r\n                         topratedrate, topratedgenre, topRatedIndex, \r\n                         pagestate, guestAboutMoviePage, mostPopularResetIndex, \r\n                         topRatedResetIndex, nowPlayingResetIndex, mostPopularTvResetIndex, \r\n                         airingTodayResetIndex, changeMovieSearchResetIndex, changeMovieSearchTvResetIndex }) {\r\n\r\n    const IMG_URL = 'http://image.tmdb.org/t/p/'\r\n    const IMG_SIZE = 'w200'\r\n    //sizes: w300, w780, w1280, original \r\n\r\n    const frontpic = Array.from(topratedfrontpic)\r\n    const title = Array.from(topratedtitle)\r\n\r\n    //useRef \r\n    const ratedTitleAnim = useRef(null)\r\n    const ratedSeeAllAnim = useRef(null)\r\n    //useRef \r\n\r\n    //functions \r\n    const handleMovieImgClick = e => {\r\n      console.log('its running')\r\n      console.log(frontpic.indexOf(e))\r\n      mostPopularResetIndex()\r\n      topRatedResetIndex()\r\n      nowPlayingResetIndex()\r\n      mostPopularTvResetIndex()\r\n      airingTodayResetIndex()\r\n      changeMovieSearchResetIndex()\r\n      changeMovieSearchTvResetIndex()\r\n      topRatedIndex(frontpic.indexOf(e) + ' toprated')\r\n      guestAboutMoviePage()\r\n    }\r\n\r\n    const changeMovieDisplay = () => {\r\n      if (displayState === '') {\r\n        setDisplayState('grid')\r\n        setGridTempState('repeat(auto-fit, minmax(250px, 1fr))')\r\n        setSeeState('see less')\r\n      }\r\n      else {\r\n        setDisplayState('')\r\n        setGridTempState('')\r\n        setSeeState('see all')\r\n      }\r\n    }\r\n    //functions \r\n\r\n    //useState \r\n    const [displayState, setDisplayState] = useState('')\r\n    const [gridTempState, setGridTempState] = useState('')\r\n    const [seeState, setSeeState] = useState('see all')\r\n    //useState \r\n\r\n    //useEffect \r\n    useEffect(() => {\r\n      gsap.fromTo(ratedTitleAnim.current, { opacity: 0, x: -50 }, { opacity: 1, x: 0, duration: 1, delay: 0.1, \r\n        scrollTrigger: \r\n        {\r\n          id: 'rated-title', \r\n          trigger: ratedTitleAnim.current, \r\n          start: 'top 80%', \r\n          //toggleActions: 'play none reverse none', \r\n          markers: false, \r\n        } \r\n      })\r\n\r\n      gsap.fromTo(ratedSeeAllAnim.current, { autoAlpha: 0, x: 50 }, { autoAlpha: 1, x: 0, ease: 'none', duration: 1, delay: 0.1, \r\n        scrollTrigger: \r\n        {\r\n          id: 'rated-see-all', \r\n          trigger: ratedSeeAllAnim.current, \r\n          start: 'top 80%', \r\n          markers: false, \r\n        } \r\n      })\r\n    })\r\n    //useEffect \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"most-popular-container\">\r\n\r\n              <div className=\"title-see-all\">\r\n                  <div className=\"left-title\" ref={ratedTitleAnim} id=\"rated-title\" >Top Rated Movies</div>\r\n                  <div className=\"right-see-all\" onClick={changeMovieDisplay} >\r\n                    <span className=\"see-all\" ref={ratedSeeAllAnim} id=\"rated-see-all\" >{seeState}</span>\r\n                  </div>\r\n              </div>\r\n\r\n              <div className=\"contain\">\r\n                <div className=\"row\" style={{display: displayState, gridTemplateColumns: gridTempState}}>\r\n                  {\r\n                    frontpic.map(pic => \r\n                      <div className=\"row__inner\">\r\n                        <Link to=\"/guestaboutmovie\">\r\n                          <div className=\"tile\" onClick={() => handleMovieImgClick(pic)} >\r\n                            <div className=\"tile__media\" >\r\n                              <img alt=\"\" src={IMG_URL + IMG_SIZE + pic} />\r\n                            </div>\r\n                            <div className=\"tile__details\">\r\n                              <div className=\"tile-details-overlay\">\r\n                                <div className=\"tile__title\">\r\n                                {\r\n                                  title[frontpic.indexOf(pic)]\r\n                                }\r\n                                </div>\r\n                              </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        </Link>\r\n                        \r\n                      </div>\r\n                    )\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n            \r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        imgpic: state.guesttitlemovie.imgpic, \r\n        pagestate: state.page.pagestate,\r\n\r\n        topratedfailure: state.toprated.topratedfailure,\r\n        topratedloading: state.toprated.topratedloading,  \r\n\r\n        topratedfrontpic: state.toprated.topratedfrontpic,\r\n        topratedbackpic: state.toprated.topratedbackpic, \r\n        topratedtitle: state.toprated.topratedtitle, \r\n        topratedrate: state.toprated.topratedrate,\r\n        topratedgenre: state.toprated.topratedgenre,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    topRatedIndex: (idx) => dispatch(topRatedIndex(idx)), \r\n    guestAboutMoviePage: () => dispatch(guestAboutMoviePage()), \r\n    mostPopularResetIndex: () => dispatch(mostPopularResetIndex()), \r\n    topRatedResetIndex: () => dispatch(topRatedResetIndex()), \r\n    nowPlayingResetIndex: () => dispatch(nowPlayingResetIndex()),\r\n    mostPopularTvResetIndex: () => dispatch(mostPopularTvResetIndex()), \r\n    airingTodayResetIndex: () => dispatch(airingTodayResetIndex()), \r\n    changeMovieSearchResetIndex: () => dispatch(changeMovieSearchResetIndex()), \r\n    changeMovieSearchTvResetIndex: () => dispatch(changeMovieSearchTvResetIndex()), \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GuestTopRated)\r\n","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestTopRatedTypes.js",[],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestNowPlayingTypes.js",[],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestNowPlayingReducers.js",[],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\GuestFolder\\GuestNowPlaying.js",["276","277","278"],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestPopularTvActions.js",["279"],"import axios from 'axios'\r\nimport { MOST_POPULAR_TV_FRONT_PIC, MOST_POPULAR_TV_BACK_PIC, MOST_POPULAR_TV_TITLE, \r\n         MOST_POPULAR_TV_RATE, MOST_POPULAR_TV_GENRE, MOST_POPULAR_TV_FAILURE, \r\n         MOST_POPULAR_TV_REQUEST, MOST_POPULAR_TV_INDEX, MOST_POPULAR_TV_OVERVIEW, \r\n         MOST_POPULAR_TV_RESET_INDEX } from './GuestPopularTvTypes'\r\n\r\n\r\nexport const mostPopularTvfrontPic = data => {\r\n    return {\r\n        type: MOST_POPULAR_TV_FRONT_PIC,   \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const mostPopularTvBackPic = data => {\r\n    return {\r\n        type: MOST_POPULAR_TV_BACK_PIC, \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const mostPopularTvTitle = data => {\r\n    return {\r\n        type: MOST_POPULAR_TV_TITLE, \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const mostPopularTvRate = data => {\r\n    return {\r\n        type: MOST_POPULAR_TV_RATE, \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const mostPopularTvGenre = data => {\r\n    return {\r\n        type: MOST_POPULAR_TV_GENRE, \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const mostPopularTvOverview = data => {\r\n    return {\r\n        type: MOST_POPULAR_TV_OVERVIEW, \r\n        payload: data \r\n    }\r\n}\r\n\r\nexport const mostPopularTvIndex = data => {\r\n    return {\r\n        type: MOST_POPULAR_TV_INDEX, \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const mostPopularTvResetIndex = () => {\r\n    return {\r\n        type: MOST_POPULAR_TV_RESET_INDEX, \r\n    }\r\n}\r\n\r\nconst mostPopularTvFailure = () => {\r\n    return {\r\n        type: MOST_POPULAR_TV_FAILURE, \r\n    }\r\n}\r\n\r\nconst mostPopularTvRequest = () => {\r\n    return {\r\n        type: MOST_POPULAR_TV_REQUEST, \r\n    }\r\n}\r\n\r\n\r\n//api calls \r\n\r\nexport const fetchMostPopularTvData = () => {\r\n    return (dispatch) => {\r\n        dispatch(mostPopularTvRequest)\r\n        axios.get('https://api.themoviedb.org/3/tv/popular?api_key=0949161fd6bf6f1127a37c1d3530c80d&language=en-US&page=1')\r\n        .then(res => {\r\n            const info = res.data \r\n\r\n            console.log('helllolololololo')\r\n            console.log(info)\r\n\r\n            var frontPic = []\r\n            var backPic = []\r\n            var title = []\r\n            var rate = []\r\n            var gen = [[], [], [], [], [], [], [], [], [], [], \r\n            [], [], [], [], [], [], [], [], [], []]\r\n            var overview = []\r\n\r\n            for (var i = 0; i <= info.results.length - 1; i++) {\r\n                frontPic.push(info.results[i].poster_path)\r\n                backPic.push(info.results[i].backdrop_path)\r\n                title.push(info.results[i].name)\r\n                rate.push(info.results[i].vote_average)\r\n                overview.push(info.results[i].overview)\r\n            }\r\n\r\n            dispatch(mostPopularTvfrontPic(frontPic))\r\n            dispatch(mostPopularTvBackPic(backPic))\r\n            dispatch(mostPopularTvTitle(title))\r\n            dispatch(mostPopularTvRate(rate))\r\n            dispatch(mostPopularTvOverview(overview))\r\n\r\n            for (var i = 0; i <= info.results.length - 1; i++) {\r\n                for (var j = 0; j <= info.results[i].genre_ids.length - 1; j++) {\r\n\r\n                    if (info.results[i].genre_ids[j] === 28) {\r\n                        gen[i].splice(gen[i].length, 0, 'Action')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 12) {\r\n                        gen[i].splice(gen[i].length, 0, 'Adventure')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 16) {\r\n                        gen[i].splice(gen[i].length, 0, 'Animation')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 35) {\r\n                        gen[i].splice(gen[i].length, 0, 'Comedy')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 80) {\r\n                        gen[i].splice(gen[i].length, 0, 'Crime')\r\n                    }\r\n                    \r\n                    if (info.results[i].genre_ids[j] === 99) {\r\n                        gen[i].splice(gen[i].length, 0, 'Documentary')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 18) {\r\n                        gen[i].splice(gen[i].length, 0, 'Drama')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 14) {\r\n                        gen[i].splice(gen[i].length, 0, 'Fantasy')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 27) {\r\n                        gen[i].splice(gen[i].length, 0, 'Horror')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 9648) {\r\n                        gen[i].splice(gen[i].length, 0, 'Mystery')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 10749) {\r\n                        gen[i].splice(gen[i].length, 0, 'Romance')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 53) {\r\n                        gen[0].splice(gen[i].length, 0, 'Thriller')\r\n                    }\r\n                }\r\n            }\r\n\r\n            var newGenArr = []\r\n            \r\n            for (let i = 0; i <= gen.length - 1; i++) {\r\n                newGenArr.push([...new Set(gen[i])])\r\n            }\r\n            dispatch(mostPopularTvGenre(newGenArr))\r\n        })\r\n\r\n        .catch(err => {\r\n            const errorMsg = err.message\r\n            dispatch(mostPopularTvFailure(errorMsg))\r\n        })\r\n    }\r\n}\r\n","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestPopularTvReducers.js",[],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\GuestFolder\\GuestMostPopularTv.js",["280","281","282"],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestAiringTodayTypes.js",[],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestAiringTodayReducers.js",[],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestAiringTodayActions.js",["283"],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\GuestFolder\\GuestAiringToday.js",["284","285","286"],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestSearchActions.js",["287"],"import axios from 'axios'\r\nimport { CHANGE_MOVIE_SEARCH_FRONT_PIC, CHANGE_MOVIE_SEARCH_BACK_PIC, CHANGE_MOVIE_SEARCH_TITLE, \r\n         CHANGE_MOVIE_SEARCH_RATE, CHANGE_MOVIE_SEARCH_GENRE, CHANGE_MOVIE_SEARCH_OVERVIEW, \r\n         CHANGE_MOVIE_SEARCH_REQUEST, CHANGE_MOVIE_SEARCH_FAILURE, \r\n         CHANGE_MOVIE_SEARCH_INDEX, CHANGE_MOVIE_SEARCH_RESET_INDEX } from './GuestSearchTypes'\r\n\r\nexport const changeMovieSearchFrontPic = data => {\r\n    return {\r\n        type: CHANGE_MOVIE_SEARCH_FRONT_PIC, \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const changeMovieSearchBackPic = data => {\r\n    return {\r\n        type: CHANGE_MOVIE_SEARCH_BACK_PIC, \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const changeMovieSearchTitle = data => {\r\n    return {\r\n        type: CHANGE_MOVIE_SEARCH_TITLE, \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const changeMovieSearchRate = data => {\r\n    return {\r\n        type: CHANGE_MOVIE_SEARCH_RATE, \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const changeMovieSearchGenre = data => {\r\n    return {\r\n        type: CHANGE_MOVIE_SEARCH_GENRE, \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const changeMovieSearchOverview = data => {\r\n    return {\r\n        type: CHANGE_MOVIE_SEARCH_OVERVIEW, \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const changeMovieSearchIndex = data => {\r\n    return {\r\n        type: CHANGE_MOVIE_SEARCH_INDEX, \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const changeMovieSearchResetIndex = data => {\r\n    return {\r\n        type: CHANGE_MOVIE_SEARCH_RESET_INDEX, \r\n        payload: data\r\n    }\r\n}\r\n\r\nconst changeMovieSearchRequest = data => {\r\n    return {\r\n        type: CHANGE_MOVIE_SEARCH_REQUEST, \r\n        payload: data\r\n    }\r\n}\r\n\r\nconst changeMovieSearchFailure = data => {\r\n    return {\r\n        type: CHANGE_MOVIE_SEARCH_FAILURE, \r\n        payload: data \r\n    }\r\n}\r\n\r\n//api calls \r\n\r\nexport const fetchMovieChangeSearchData = (movie_name) => {\r\n    return (dispatch) => {\r\n        dispatch(changeMovieSearchRequest)\r\n        axios.get('https://api.themoviedb.org/3/search/movie?api_key=0949161fd6bf6f1127a37c1d3530c80d&language=en-US&query=' + movie_name + '&page=1&include_adult=false')\r\n        .then(res => {\r\n            const info = res.data\r\n            \r\n            console.log(info)\r\n\r\n            var frontPic = []\r\n            var backPic = []\r\n            var title = []\r\n            var rate = []\r\n            var gen = [[], [], [], [], [], [], [], [], [], [], \r\n            [], [], [], [], [], [], [], [], [], []]\r\n            var overview = []\r\n\r\n            for (var i = 0; i <= info.results.length - 1; i++) {\r\n                frontPic.push(info.results[i].poster_path)\r\n                backPic.push(info.results[i].backdrop_path)\r\n                title.push(info.results[i].title)\r\n                rate.push(info.results[i].vote_average)\r\n                overview.push(info.results[i].overview)      \r\n            }\r\n            dispatch(changeMovieSearchFrontPic(frontPic))\r\n            dispatch(changeMovieSearchBackPic(backPic))\r\n            dispatch(changeMovieSearchTitle(title))\r\n            dispatch(changeMovieSearchRate(rate))\r\n            dispatch(changeMovieSearchOverview(overview))\r\n\r\n            for (var i = 0; i <= info.results.length - 1; i++) {\r\n                for (var j = 0; j <= info.results[i].genre_ids.length - 1; j++) {\r\n\r\n                    if (info.results[i].genre_ids[j] === 28) {\r\n                        gen[i].splice(gen[i].length, 0, 'Action')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 12) {\r\n                        gen[i].splice(gen[i].length, 0, 'Adventure')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 16) {\r\n                        gen[i].splice(gen[i].length, 0, 'Animation')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 35) {\r\n                        gen[i].splice(gen[i].length, 0, 'Comedy')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 80) {\r\n                        gen[i].splice(gen[i].length, 0, 'Crime')\r\n                    }\r\n                    \r\n                    if (info.results[i].genre_ids[j] === 99) {\r\n                        gen[i].splice(gen[i].length, 0, 'Documentary')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 18) {\r\n                        gen[i].splice(gen[i].length, 0, 'Drama')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 14) {\r\n                        gen[i].splice(gen[i].length, 0, 'Fantasy')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 27) {\r\n                        gen[i].splice(gen[i].length, 0, 'Horror')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 9648) {\r\n                        gen[i].splice(gen[i].length, 0, 'Mystery')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 10749) {\r\n                        gen[i].splice(gen[i].length, 0, 'Romance')\r\n                    }\r\n\r\n                    if (info.results[i].genre_ids[j] === 53) {\r\n                        gen[0].splice(gen[i].length, 0, 'Thriller')\r\n                    }\r\n                }\r\n            }\r\n\r\n            var newGenArr = []\r\n\r\n            for (let i = 0; i <= gen.length - 1; i++) {\r\n                newGenArr.push([...new Set(gen[i])])\r\n            }\r\n            dispatch(changeMovieSearchGenre(newGenArr))\r\n        })\r\n\r\n        .catch(err => {\r\n            const errorMsg = err.message\r\n            dispatch(changeMovieSearchFailure(errorMsg))\r\n        })\r\n    }\r\n}","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestSearchReducers.js",[],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestSearchTypes.js",[],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\GuestFolder\\GuestSearchPage.js",["288","289","290","291","292","293","294"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter, Redirect, Route, Switch, Link } from 'react-router-dom';\r\nimport gsap from 'gsap'\r\nimport { ScrollTrigger } from 'gsap/ScrollTrigger'\r\nimport { changeMovieSearchIndex, guestAboutMoviePage, changeMovieSearchResetIndex, \r\n         loginPage, signupPage, guestPage, fetchMovieChangeSearchData,  \r\n         changeMovieSearchTvIndex, changeMovieSearchTvResetIndex, \r\n         fetchMovieChangeSearchTvData, guestSearchPage, mostPopularResetIndex,\r\n         topRatedResetIndex, nowPlayingResetIndex, mostPopularTvResetIndex, \r\n         airingTodayResetIndex } from '../redux'\r\n\r\ngsap.registerPlugin(ScrollTrigger)\r\n\r\n\r\nfunction GuestSearchPage({ changeMovieSearchIndex, guestAboutMoviePage, changeMovieSearchResetIndex, \r\n                           loginPage, signupPage, guestPage, guestsearchfrontpic, guestsearchbackpic, \r\n                           guestsearchtitle, guestsearchrate, guestsearchgenre, \r\n                           guestsearchtvfrontpic, guestsearchtvbackpic, guestsearchtvtitle, \r\n                           guestsearchtvrate, guestsearchtvgenre, fetchMovieChangeSearchData, \r\n                           fetchMovieChangeSearchTvData, changeMovieSearchTvIndex, changeMovieSearchTvResetIndex, \r\n                            guestSearchPage, mostPopularResetIndex, \r\n                           topRatedResetIndex, nowPlayingResetIndex, mostPopularTvResetIndex, \r\n                           airingTodayResetIndex }) \r\n    {\r\n\r\n    document.body.style.background = \"unset\"\r\n    document.body.style.backgroundColor = \"rgb(15, 15, 15)\"\r\n\r\n    const movieFrontPic = Array.from(guestsearchfrontpic)\r\n    const movieTitle = Array.from(guestsearchtitle)\r\n\r\n    const tvFrontPic = Array.from(guestsearchtvfrontpic)\r\n    const tvTitle = Array.from(guestsearchtvtitle)\r\n\r\n    const IMG_URL = 'http://image.tmdb.org/t/p/'\r\n    const IMG_SIZE = 'w200'\r\n\r\n    //useState \r\n    const [search, setSearch] = useState('')\r\n    const [redirectState, setRedirectState] = useState(false)\r\n    //useState \r\n\r\n    //useRef \r\n    const movieTitleAnim = useRef(null)\r\n\r\n    const tvTitleAnim = useRef(null)\r\n    //useRef \r\n\r\n    //functions \r\n    const putUpOpacity = () => {\r\n        setOpacity('1')\r\n    }\r\n\r\n    const putDownOpacity = () => {\r\n        setOpacity('0')\r\n    }\r\n\r\n    const handleSubmitSearch = e => {\r\n        e.preventDefault()\r\n        if (!search || !search.trim()) {\r\n            return \r\n        }\r\n        else {\r\n            fetchMovieChangeSearchData(search)\r\n            fetchMovieChangeSearchTvData(search)\r\n            //guestSearchPage()\r\n            setRedirectState(true)\r\n        }\r\n    }\r\n\r\n    const handleOnChangeSearch = e => {\r\n        e.preventDefault()\r\n\r\n        setSearch(e.target.value)\r\n    }\r\n\r\n    const [opacity, setOpacity] = useState('0')\r\n\r\n    const handleMovieImgClick = e => {\r\n        setOpacity('0')\r\n        mostPopularResetIndex()\r\n        topRatedResetIndex()\r\n        nowPlayingResetIndex()\r\n        mostPopularTvResetIndex()\r\n        airingTodayResetIndex()\r\n        changeMovieSearchResetIndex()\r\n        changeMovieSearchTvResetIndex()\r\n        changeMovieSearchIndex(movieFrontPic.indexOf(e) + ' moviesearch')\r\n        guestAboutMoviePage()\r\n    }\r\n\r\n    const handleTvImgClick = e => {\r\n        setOpacity('0')\r\n        mostPopularResetIndex()\r\n        topRatedResetIndex()\r\n        nowPlayingResetIndex()\r\n        mostPopularTvResetIndex()\r\n        airingTodayResetIndex()\r\n        changeMovieSearchResetIndex()\r\n        changeMovieSearchTvResetIndex()\r\n        changeMovieSearchTvIndex(tvFrontPic.indexOf(e) + ' tvsearch')\r\n        guestAboutMoviePage()\r\n    }\r\n    //functions \r\n\r\n    //useEffect \r\n    useEffect(() => {\r\n        gsap.fromTo(movieTitleAnim.current, { opacity: 0, x: -50 }, { opacity: 1, x: 0, duration: 1, delay: 0.1, \r\n            scrollTrigger: \r\n                {\r\n                    trigger: movieTitleAnim.current, \r\n                    id: 'movie-title', \r\n                    start: 'top 80%', \r\n                    markers: false \r\n                } \r\n            })\r\n\r\n        gsap.fromTo(tvTitleAnim.current, { opacity: 0, x: -50 }, { opacity: 1, x: 0, duration: 1, delay: 0.1, \r\n            scrollTrigger: \r\n                {\r\n                    trigger: tvTitleAnim.current, \r\n                    id: 'tv-title', \r\n                    start: 'top 80%', \r\n                    markers: false  \r\n                } \r\n            })\r\n    }, [])\r\n    //useEffect \r\n\r\n\r\n    return (\r\n        <div className=\"search-page-container\">\r\n\r\n                <nav>\r\n                    <div className=\"img-movie-container\">\r\n                        <Link to=\"/\">\r\n                            <img className=\"this-aint-working\" onClick={guestPage} src=\"https://www.nicepng.com/png/full/670-6708259_action-icon-png.png\" alt=\"\" />\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className=\"login-signup\">\r\n                        <form className=\"search-button\" onSubmit={handleSubmitSearch} onChange={handleOnChangeSearch} >\r\n                            <input type=\"text\" placeholder=\"Search\" />\r\n                            <button className=\"search-icon-container\" type=\"submit\">\r\n                                <img className=\"dis-img\" alt=\"\" src=\"https://rubiojason.github.io/Around-The-World/static/media/SearchIcon.e1a3c478.svg\"/>\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"nav-overlay\"></div>\r\n                </nav>\r\n\r\n                <div className=\"movies-search-title\" ref={movieTitleAnim} id=\"movie-title\">Movies</div>\r\n\r\n                <div className=\"few\">\r\n                    <div className=\"row\">\r\n                        {\r\n                            movieFrontPic.map(pic => \r\n\r\n                                    movieFrontPic.length === 0 ? <div>No Results Found</div> : \r\n\r\n                                    pic === null ? <div style={{display: 'none'}}></div> : \r\n                                \r\n                                    <div className=\"row__inner\">\r\n                                        <Link to=\"/guestaboutmovie\">\r\n                                            <div className=\"tile\" onMouseLeave={putDownOpacity} onClick={() => handleMovieImgClick(pic)} >\r\n                                                <div className=\"tile__media\">\r\n                                                    <img key={pic} alt=\"\" src={IMG_URL + IMG_SIZE + pic} />\r\n                                                </div>\r\n                                                <div className=\"tile__details\">\r\n                                                    <div className=\"tile-details-overlay\">\r\n                                                        {/*<div className=\"tile__options\">\r\n                                                            <img onMouseOver={putUpOpacity} alt=\"\" src=\"https://freight.cargo.site/t/original/i/3a220666904fe9d4aabaa1a088a202b1b23f8f5cb38b75b7c23bbc3e1a287aff/Menu-White-Dots.png\" />\r\n                                                        </div>\r\n                                                        <div className=\"pop-up-options\" style={{opacity: opacity}}>\r\n                                                            <Link to=\"/guestaboutmovie\">\r\n                                                                <div className=\"inside-pop-up\" onClick={() => handleMovieImgClick(pic)}>\r\n                                                                    Description\r\n                                                                </div>\r\n                                                            </Link>\r\n                                                        </div>*/}\r\n                                                        <div className=\"tile__title\" key={pic}>\r\n                                                            {movieTitle[movieFrontPic.indexOf(pic)]}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    \r\n\r\n                                </div>\r\n                                )\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"movies-search-title\" ref={tvTitleAnim} id=\"tv-title\">TV Shows</div>\r\n\r\n                <div className=\"few\">\r\n                    <div className=\"row\">\r\n                        {\r\n                            tvFrontPic.map(pic => \r\n\r\n                                    pic === null ? <div style={{display: 'none'}}></div> : \r\n                                \r\n                                    <div className=\"row__inner\">\r\n                                        <Link to=\"/guestaboutmovie\">\r\n                                            <div className=\"tile\" onMouseLeave={putDownOpacity} onClick={() => handleTvImgClick(pic)}>\r\n                                                <div className=\"tile__media\">\r\n                                                    <img alt=\"\" src={IMG_URL + IMG_SIZE + pic} />\r\n                                                </div>\r\n                                                <div className=\"tile__details\">\r\n                                                    <div className=\"tile-details-overlay\">\r\n                                                        {/*<div className=\"tile__options\">\r\n                                                            <img onMouseOver={putUpOpacity} alt=\"\" src=\"https://freight.cargo.site/t/original/i/3a220666904fe9d4aabaa1a088a202b1b23f8f5cb38b75b7c23bbc3e1a287aff/Menu-White-Dots.png\" />\r\n                                                        </div>\r\n                                                        <div className=\"pop-up-options\" style={{opacity: opacity}}>\r\n                                                            <Link to=\"/guestaboutmovie\">\r\n                                                               <div className=\"inside-pop-up\" onClick={() => handleTvImgClick(pic)}>\r\n                                                                    Description\r\n                                                                </div> \r\n                                                            </Link>\r\n                                                        </div>*/}\r\n                                                        <div className=\"tile__title\">\r\n                                                            {tvTitle[tvFrontPic.indexOf(pic)]}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                </div>\r\n                                \r\n                                )\r\n                            }\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{margin: '30px 0px'}}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        imgpic: state.guesttitlemovie.imgpic, \r\n        pagestate: state.page.pagestate,\r\n\r\n        guestsearchfailure: state.guestsearch.guestsearchfailure,\r\n        guestsearchloading: state.guestsearch.guestsearchloading,  \r\n\r\n        guestsearchfrontpic: state.guestsearch.guestsearchfrontpic,\r\n        guestsearchbackpic: state.guestsearch.guestsearchbackpic, \r\n        guestsearchtitle: state.guestsearch.guestsearchtitle, \r\n        guestsearchrate: state.guestsearch.guestsearchrate,\r\n        guestsearchgenre: state.guestsearch.guestsearchgenre,\r\n\r\n        guestsearchtvfailure: state.guestsearchtv.guestsearchtvfailure,\r\n        guestsearchtvloading: state.guestsearchtv.guestsearchtvloading,  \r\n\r\n        guestsearchtvfrontpic: state.guestsearchtv.guestsearchtvfrontpic,\r\n        guestsearchtvbackpic: state.guestsearchtv.guestsearchtvbackpic, \r\n        guestsearchtvtitle: state.guestsearchtv.guestsearchtvtitle, \r\n        guestsearchtvrate: state.guestsearchtv.guestsearchtvrate,\r\n        guestsearchtvgenre: state.guestsearchtv.guestsearchtvgenre,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeMovieSearchIndex: (idx) => dispatch(changeMovieSearchIndex(idx)), \r\n        changeMovieSearchTvIndex: (i) => dispatch(changeMovieSearchTvIndex(i)), \r\n        guestSearchPage: () => dispatch(guestSearchPage()), \r\n        guestAboutMoviePage: () => dispatch(guestAboutMoviePage()),  \r\n        changeMovieSearchResetIndex: () => dispatch(changeMovieSearchResetIndex()), \r\n        changeMovieSearchTvResetIndex: () => dispatch(changeMovieSearchTvResetIndex()), \r\n        loginPage: () => dispatch(loginPage()), \r\n        signupPage: () => dispatch(signupPage()), \r\n        guestPage: () => dispatch(guestPage()), \r\n        mostPopularResetIndex: () => dispatch(mostPopularResetIndex()), \r\n        topRatedResetIndex: () => dispatch(topRatedResetIndex()), \r\n        nowPlayingResetIndex: () => dispatch(nowPlayingResetIndex()), \r\n        mostPopularTvResetIndex: () => dispatch(mostPopularTvResetIndex()), \r\n        airingTodayResetIndex: () => dispatch(airingTodayResetIndex()), \r\n        fetchMovieChangeSearchData: (i) => dispatch(fetchMovieChangeSearchData(i)), \r\n        fetchMovieChangeSearchTvData: (i) => dispatch(fetchMovieChangeSearchTvData(i)), \r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GuestSearchPage)\r\n","C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestSearchTVActions.js",["295"],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestSearchTVReducers.js",[],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\GuestFolder\\GuestAccountPage.js",["296","297","298"],"import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter, Redirect, Route, Switch, Link } from 'react-router-dom';\r\nimport { loginPage, signupPage, guestPage, guestSearchPage, fetchMovieChangeSearchData, \r\n         fetchMovieChangeSearchTvData, guestAccountPage, fetchGuestTitleMovie } from '../redux'\r\n\r\nfunction GuestAccountPage({ loginPage, signupPage, guestPage, guestSearchPage, \r\n                            fetchMovieChangeSearchData, fetchMovieChangeSearchTvData, \r\n                            guestAccountPage, fetchGuestTitleMovie }) {\r\n\r\n    document.body.style.background = \"unset\"\r\n    document.body.style.backgroundColor = \"rgb(15, 15, 15)\"\r\n\r\n    const [search, setSearch] = useState('')\r\n    const [redirectPage, setRedirectPage] = useState(false)\r\n\r\n    const handleSubmitSearch = e => {\r\n        e.preventDefault()\r\n        if (!search || !search.trim()) {\r\n            return \r\n        }\r\n        else {\r\n            fetchMovieChangeSearchData(search)\r\n            fetchMovieChangeSearchTvData(search)\r\n            //guestSearchPage()\r\n            setRedirectPage(true)\r\n        }\r\n    }\r\n\r\n    const handleOnChangeSearch = e => {\r\n        e.preventDefault()\r\n\r\n        setSearch(e.target.value)\r\n    }\r\n\r\n    if (redirectPage) {\r\n        return <Redirect to=\"/guestsearchpage\" />\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <nav>\r\n                <div className=\"img-movie-container\">\r\n                    <Link to=\"guestpage\">\r\n                        <img onClick={guestPage} src=\"https://www.nicepng.com/png/full/670-6708259_action-icon-png.png\" alt=\"\" />\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className=\"login-signup\">\r\n                    <form className=\"search-button\" onSubmit={handleSubmitSearch} onChange={handleOnChangeSearch} >\r\n                        <input type=\"text\" placeholder=\"Search\"/>\r\n                            <button className=\"search-icon-container\" type=\"submit\">\r\n                                <img className=\"dis-img\" alt=\"\" src=\"https://rubiojason.github.io/Around-The-World/static/media/SearchIcon.e1a3c478.svg\"/>\r\n                            </button>    \r\n                    </form>\r\n\r\n                    <Link to=\"/login\">\r\n                        <span className=\"login-button-nav\" onClick={loginPage}>Login </span> \r\n                    </Link>\r\n                    \r\n                    <Link to=\"/\">\r\n                        <span className=\"signup-button-nav\" onClick={signupPage}> SignUp</span>\r\n                    </Link>\r\n                    \r\n                    <div className=\"guest-img-container\" onClick={guestAccountPage}>\r\n                        <img alt=\"\" src=\"https://cdn3.iconfinder.com/data/icons/login-6/512/LOGIN-10-512.png\" />       \r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"nav-overlay\"></div>\r\n            </nav>\r\n\r\n            <div className=\"guest-account-page-container\">\r\n                <div className=\"left-side-container\">\r\n                    \r\n                    <div className=\"account-img-container\">\r\n                        <img alt=\"\" src=\"https://cdn3.iconfinder.com/data/icons/login-6/512/LOGIN-10-512.png\" />\r\n                    </div>\r\n\r\n                    <div className=\"account-bottom-img-container\">\r\n                        <div className=\"welcome-guest-bottom\">\r\n                            Welcome Guest\r\n                        </div>\r\n                        <Link to=\"/\">\r\n                            <button onClick={signupPage} >Log Out</button>\r\n                        </Link>\r\n                        \r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"right-side-container\">\r\n                    \r\n                    <div className=\"right-content-tab\">\r\n                        <div className=\"right-content-title\">\r\n                            Your Watch Later\r\n                        </div>\r\n                        <div className=\"right-content-content\">\r\n                            <div className=\"bracket\"></div>\r\n                            <div className=\"no-content\">There is no Content Available</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"right-content-tab\">\r\n                        <div className=\"right-content-title\">\r\n                            Recently Rated      \r\n                        </div>\r\n                        <div className=\"right-content-content\">\r\n                            <div className=\"bracket\"></div>\r\n                            <div className=\"no-content\">There is no Content Available</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        info: state.guesttitlemovie, \r\n        imgpic: state.guesttitlemovie.imgpic, \r\n        imgtitle: state.guesttitlemovie.imgtitle, \r\n        imgrate: state.guesttitlemovie.imgrate,\r\n        imggenre: state.guesttitlemovie.imggenre,\r\n        pagestate: state.page.pagestate,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchGuestTitleMovie: () => dispatch(fetchGuestTitleMovie()), \r\n        loginPage: () => dispatch(loginPage()), \r\n        signupPage: () => dispatch(signupPage()), \r\n        guestPage: () => dispatch(guestPage()), \r\n        guestSearchPage: () => dispatch(guestSearchPage()), \r\n        guestAccountPage: () => dispatch(guestAccountPage()), \r\n        fetchMovieChangeSearchData: (i) => dispatch(fetchMovieChangeSearchData(i)), \r\n        fetchMovieChangeSearchTvData: (i) => dispatch(fetchMovieChangeSearchTvData(i)), \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GuestAccountPage)\r\n",["299","300"],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestPopularTvTypes.js",[],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestSearchTVTypes.js",[],"C:\\Users\\Jason Rubio\\Desktop\\movie-db\\src\\redux\\GuestState\\GuestNowPlayingActions.js",["301"],{"ruleId":"302","replacedBy":"303"},{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","severity":1,"message":"307","line":1,"column":8,"nodeType":"308","messageId":"309","endLine":1,"endColumn":17},{"ruleId":"306","severity":1,"message":"310","line":5,"column":10,"nodeType":"308","messageId":"309","endLine":5,"endColumn":23},{"ruleId":"306","severity":1,"message":"311","line":6,"column":10,"nodeType":"308","messageId":"309","endLine":6,"endColumn":21},{"ruleId":"306","severity":1,"message":"310","line":5,"column":10,"nodeType":"308","messageId":"309","endLine":5,"endColumn":23},{"ruleId":"306","severity":1,"message":"312","line":5,"column":25,"nodeType":"308","messageId":"309","endLine":5,"endColumn":30},{"ruleId":"306","severity":1,"message":"313","line":5,"column":32,"nodeType":"308","messageId":"309","endLine":5,"endColumn":38},{"ruleId":"302","replacedBy":"314"},{"ruleId":"304","replacedBy":"315"},{"ruleId":"306","severity":1,"message":"316","line":5,"column":8,"nodeType":"308","messageId":"309","endLine":5,"endColumn":19},{"ruleId":"306","severity":1,"message":"317","line":7,"column":10,"nodeType":"308","messageId":"309","endLine":7,"endColumn":22},{"ruleId":"306","severity":1,"message":"318","line":7,"column":24,"nodeType":"308","messageId":"309","endLine":7,"endColumn":38},{"ruleId":"306","severity":1,"message":"319","line":8,"column":8,"nodeType":"308","messageId":"309","endLine":8,"endColumn":15},{"ruleId":"306","severity":1,"message":"320","line":9,"column":8,"nodeType":"308","messageId":"309","endLine":9,"endColumn":23},{"ruleId":"302","replacedBy":"321"},{"ruleId":"304","replacedBy":"322"},{"ruleId":"302","replacedBy":"323"},{"ruleId":"304","replacedBy":"324"},{"ruleId":"306","severity":1,"message":"307","line":4,"column":8,"nodeType":"308","messageId":"309","endLine":4,"endColumn":17},{"ruleId":"306","severity":1,"message":"325","line":5,"column":8,"nodeType":"308","messageId":"309","endLine":5,"endColumn":18},{"ruleId":"306","severity":1,"message":"326","line":9,"column":8,"nodeType":"308","messageId":"309","endLine":9,"endColumn":24},{"ruleId":"306","severity":1,"message":"327","line":10,"column":25,"nodeType":"308","messageId":"309","endLine":10,"endColumn":33},{"ruleId":"302","replacedBy":"328"},{"ruleId":"304","replacedBy":"329"},{"ruleId":"306","severity":1,"message":"330","line":1,"column":17,"nodeType":"308","messageId":"309","endLine":1,"endColumn":26},{"ruleId":"306","severity":1,"message":"310","line":5,"column":10,"nodeType":"308","messageId":"309","endLine":5,"endColumn":23},{"ruleId":"306","severity":1,"message":"312","line":5,"column":25,"nodeType":"308","messageId":"309","endLine":5,"endColumn":30},{"ruleId":"306","severity":1,"message":"313","line":5,"column":32,"nodeType":"308","messageId":"309","endLine":5,"endColumn":38},{"ruleId":"306","severity":1,"message":"310","line":14,"column":10,"nodeType":"308","messageId":"309","endLine":14,"endColumn":23},{"ruleId":"306","severity":1,"message":"312","line":14,"column":25,"nodeType":"308","messageId":"309","endLine":14,"endColumn":30},{"ruleId":"306","severity":1,"message":"313","line":14,"column":32,"nodeType":"308","messageId":"309","endLine":14,"endColumn":38},{"ruleId":"306","severity":1,"message":"331","line":14,"column":40,"nodeType":"308","messageId":"309","endLine":14,"endColumn":44},{"ruleId":"302","replacedBy":"332"},{"ruleId":"304","replacedBy":"333"},{"ruleId":"306","severity":1,"message":"312","line":6,"column":25,"nodeType":"308","messageId":"309","endLine":6,"endColumn":30},{"ruleId":"306","severity":1,"message":"313","line":6,"column":32,"nodeType":"308","messageId":"309","endLine":6,"endColumn":38},{"ruleId":"306","severity":1,"message":"310","line":7,"column":10,"nodeType":"308","messageId":"309","endLine":7,"endColumn":23},{"ruleId":"306","severity":1,"message":"312","line":7,"column":35,"nodeType":"308","messageId":"309","endLine":7,"endColumn":40},{"ruleId":"306","severity":1,"message":"313","line":7,"column":42,"nodeType":"308","messageId":"309","endLine":7,"endColumn":48},{"ruleId":"306","severity":1,"message":"331","line":7,"column":50,"nodeType":"308","messageId":"309","endLine":7,"endColumn":54},{"ruleId":"306","severity":1,"message":"334","line":17,"column":11,"nodeType":"308","messageId":"309","endLine":17,"endColumn":18},{"ruleId":"306","severity":1,"message":"310","line":3,"column":10,"nodeType":"308","messageId":"309","endLine":3,"endColumn":23},{"ruleId":"306","severity":1,"message":"312","line":3,"column":25,"nodeType":"308","messageId":"309","endLine":3,"endColumn":30},{"ruleId":"306","severity":1,"message":"313","line":3,"column":32,"nodeType":"308","messageId":"309","endLine":3,"endColumn":38},{"ruleId":"335","severity":1,"message":"336","line":107,"column":22,"nodeType":"308","messageId":"337","endLine":107,"endColumn":23},{"ruleId":"306","severity":1,"message":"310","line":5,"column":10,"nodeType":"308","messageId":"309","endLine":5,"endColumn":23},{"ruleId":"306","severity":1,"message":"312","line":5,"column":25,"nodeType":"308","messageId":"309","endLine":5,"endColumn":30},{"ruleId":"306","severity":1,"message":"313","line":5,"column":32,"nodeType":"308","messageId":"309","endLine":5,"endColumn":38},{"ruleId":"306","severity":1,"message":"338","line":6,"column":119,"nodeType":"308","messageId":"309","endLine":6,"endColumn":137},{"ruleId":"306","severity":1,"message":"334","line":44,"column":11,"nodeType":"308","messageId":"309","endLine":44,"endColumn":18},{"ruleId":"306","severity":1,"message":"339","line":50,"column":12,"nodeType":"308","messageId":"309","endLine":50,"endColumn":22},{"ruleId":"306","severity":1,"message":"340","line":51,"column":12,"nodeType":"308","messageId":"309","endLine":51,"endColumn":22},{"ruleId":"306","severity":1,"message":"341","line":52,"column":12,"nodeType":"308","messageId":"309","endLine":52,"endColumn":28},{"ruleId":"306","severity":1,"message":"342","line":53,"column":12,"nodeType":"308","messageId":"309","endLine":53,"endColumn":28},{"ruleId":"306","severity":1,"message":"343","line":160,"column":11,"nodeType":"308","messageId":"309","endLine":160,"endColumn":26},{"ruleId":"306","severity":1,"message":"344","line":166,"column":11,"nodeType":"308","messageId":"309","endLine":166,"endColumn":28},{"ruleId":"306","severity":1,"message":"345","line":172,"column":11,"nodeType":"308","messageId":"309","endLine":172,"endColumn":32},{"ruleId":"306","severity":1,"message":"346","line":178,"column":11,"nodeType":"308","messageId":"309","endLine":178,"endColumn":34},{"ruleId":"347","severity":1,"message":"348","line":273,"column":8,"nodeType":"349","endLine":273,"endColumn":10,"suggestions":"350"},{"ruleId":"347","severity":1,"message":"351","line":375,"column":8,"nodeType":"349","endLine":375,"endColumn":10,"suggestions":"352"},{"ruleId":"335","severity":1,"message":"336","line":110,"column":22,"nodeType":"308","messageId":"337","endLine":110,"endColumn":23},{"ruleId":"302","replacedBy":"353"},{"ruleId":"304","replacedBy":"354"},{"ruleId":"306","severity":1,"message":"310","line":5,"column":10,"nodeType":"308","messageId":"309","endLine":5,"endColumn":23},{"ruleId":"306","severity":1,"message":"312","line":5,"column":25,"nodeType":"308","messageId":"309","endLine":5,"endColumn":30},{"ruleId":"306","severity":1,"message":"313","line":5,"column":32,"nodeType":"308","messageId":"309","endLine":5,"endColumn":38},{"ruleId":"306","severity":1,"message":"310","line":3,"column":10,"nodeType":"308","messageId":"309","endLine":3,"endColumn":23},{"ruleId":"306","severity":1,"message":"312","line":3,"column":25,"nodeType":"308","messageId":"309","endLine":3,"endColumn":30},{"ruleId":"306","severity":1,"message":"313","line":3,"column":32,"nodeType":"308","messageId":"309","endLine":3,"endColumn":38},{"ruleId":"335","severity":1,"message":"336","line":110,"column":22,"nodeType":"308","messageId":"337","endLine":110,"endColumn":23},{"ruleId":"306","severity":1,"message":"310","line":5,"column":10,"nodeType":"308","messageId":"309","endLine":5,"endColumn":23},{"ruleId":"306","severity":1,"message":"312","line":5,"column":25,"nodeType":"308","messageId":"309","endLine":5,"endColumn":30},{"ruleId":"306","severity":1,"message":"313","line":5,"column":32,"nodeType":"308","messageId":"309","endLine":5,"endColumn":38},{"ruleId":"335","severity":1,"message":"336","line":110,"column":22,"nodeType":"308","messageId":"337","endLine":110,"endColumn":23},{"ruleId":"306","severity":1,"message":"310","line":5,"column":10,"nodeType":"308","messageId":"309","endLine":5,"endColumn":23},{"ruleId":"306","severity":1,"message":"312","line":5,"column":25,"nodeType":"308","messageId":"309","endLine":5,"endColumn":30},{"ruleId":"306","severity":1,"message":"313","line":5,"column":32,"nodeType":"308","messageId":"309","endLine":5,"endColumn":38},{"ruleId":"335","severity":1,"message":"336","line":109,"column":22,"nodeType":"308","messageId":"337","endLine":109,"endColumn":23},{"ruleId":"306","severity":1,"message":"310","line":3,"column":10,"nodeType":"308","messageId":"309","endLine":3,"endColumn":23},{"ruleId":"306","severity":1,"message":"327","line":3,"column":25,"nodeType":"308","messageId":"309","endLine":3,"endColumn":33},{"ruleId":"306","severity":1,"message":"312","line":3,"column":35,"nodeType":"308","messageId":"309","endLine":3,"endColumn":40},{"ruleId":"306","severity":1,"message":"313","line":3,"column":42,"nodeType":"308","messageId":"309","endLine":3,"endColumn":48},{"ruleId":"306","severity":1,"message":"355","line":41,"column":12,"nodeType":"308","messageId":"309","endLine":41,"endColumn":25},{"ruleId":"306","severity":1,"message":"356","line":51,"column":11,"nodeType":"308","messageId":"309","endLine":51,"endColumn":23},{"ruleId":"306","severity":1,"message":"357","line":78,"column":12,"nodeType":"308","messageId":"309","endLine":78,"endColumn":19},{"ruleId":"335","severity":1,"message":"336","line":109,"column":22,"nodeType":"308","messageId":"337","endLine":109,"endColumn":23},{"ruleId":"306","severity":1,"message":"310","line":3,"column":10,"nodeType":"308","messageId":"309","endLine":3,"endColumn":23},{"ruleId":"306","severity":1,"message":"312","line":3,"column":35,"nodeType":"308","messageId":"309","endLine":3,"endColumn":40},{"ruleId":"306","severity":1,"message":"313","line":3,"column":42,"nodeType":"308","messageId":"309","endLine":3,"endColumn":48},{"ruleId":"302","replacedBy":"358"},{"ruleId":"304","replacedBy":"359"},{"ruleId":"335","severity":1,"message":"336","line":107,"column":22,"nodeType":"308","messageId":"337","endLine":107,"endColumn":23},"no-native-reassign",["360"],"no-negated-in-lhs",["361"],"no-unused-vars","'LoginPage' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'PersistGate' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.",["360"],["361"],"'PageReducer' is defined but never used.","'persistStore' is defined but never used.","'persistReducer' is defined but never used.","'storage' is defined but never used.","'autoMergeLevel2' is defined but never used.",["360"],["361"],["360"],["361"],"'SignUpPage' is defined but never used.","'GuestAccountPage' is defined but never used.","'Redirect' is defined but never used.",["360"],["361"],"'useEffect' is defined but never used.","'Link' is defined but never used.",["360"],["361"],"'API_KEY' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'nowPlayingOverview' is defined but never used.","'rateZindex' is assigned a value but never used.","'imgOpacity' is assigned a value but never used.","'darkenPageZindex' is assigned a value but never used.","'aboutMovieZindex' is assigned a value but never used.","'handleRateClick' is assigned a value but never used.","'handleRateUnClick' is assigned a value but never used.","'handleAboutMovieClick' is assigned a value but never used.","'handleAboutMovieUnClick' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'airingTodayIndex', 'airingtodayrate', 'guestSearchIndex', 'guestSearchTvIndex', 'guestsearchrate', 'guestsearchtvrate', 'mostpoprate', 'mostpoptvrate', 'nowPlayingIndex', 'nowplayrate', 'popIndex', 'popTvIndex', 'topRatedIndex', and 'topratedrate'. Either include them or remove the dependency array.","ArrayExpression",["362"],"React Hook useEffect has missing dependencies: 'airingTodayIndex', 'guestSearchIndex', 'guestSearchTvIndex', 'nowPlayingIndex', 'popIndex', 'popTvIndex', and 'topRatedIndex'. Either include them or remove the dependency array.",["363"],["360"],["361"],"'redirectState' is assigned a value but never used.","'putUpOpacity' is assigned a value but never used.","'opacity' is assigned a value but never used.",["360"],["361"],"no-global-assign","no-unsafe-negation",{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},"Update the dependencies array to be: [airingTodayIndex, airingtodayrate, guestSearchIndex, guestSearchTvIndex, guestsearchrate, guestsearchtvrate, mostpoprate, mostpoptvrate, nowPlayingIndex, nowplayrate, popIndex, popTvIndex, topRatedIndex, topratedrate]",{"range":"368","text":"369"},"Update the dependencies array to be: [airingTodayIndex, guestSearchIndex, guestSearchTvIndex, nowPlayingIndex, popIndex, popTvIndex, topRatedIndex]",{"range":"370","text":"371"},[9472,9474],"[airingTodayIndex, airingtodayrate, guestSearchIndex, guestSearchTvIndex, guestsearchrate, guestsearchtvrate, mostpoprate, mostpoptvrate, nowPlayingIndex, nowplayrate, popIndex, popTvIndex, topRatedIndex, topratedrate]",[15750,15752],"[airingTodayIndex, guestSearchIndex, guestSearchTvIndex, nowPlayingIndex, popIndex, popTvIndex, topRatedIndex]"]